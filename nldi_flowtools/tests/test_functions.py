from nldi_flowtools.src.nldi_flowtools import splitcatchment, flowtrace
from nldi_flowtools.src.utils import *
# from nldi_flowtools import splitcatchment, flowtrace
from shapely.geometry import shape, mapping, Point, GeometryCollection, LineString, MultiLineString, Polygon
from rasterio import Affine

##################### Splitcatchment Tests ##############################

def test_splitcatchment_1():
    actual = splitcatchment(-93, 45, True)
    expected = {"features": [{"geometry": {"coordinates": [[[-93.004705, 44.992876], [-93.005282, 44.993016], [-93.005109, 44.994369], [-93.006721, 44.994937], [-93.009142, 44.995942], [-93.010043, 44.997435], [-93.01047, 44.998566], [-93.00983, 45.000034], [-93.012506, 45.002472], [-93.015846, 45.002357], [-93.016935, 45.00331], [-93.017277, 45.00575], [-93.018238, 45.006374], [-93.019473, 45.007456], [-93.016408, 45.009028], [-93.015893, 45.010429], [-93.014668, 45.010784], [-93.014747, 45.011952], [-93.017769, 45.011633], [-93.024573, 45.011535], [-93.027889, 45.012941], [-93.030205, 45.013294], [-93.030629, 45.014416], [-93.031776, 45.01516], [-93.032286, 45.015607], [-93.03194, 45.015903], [-93.031281, 45.016242], [-93.030671, 45.016766], [-93.028489, 45.017341], [-93.029079, 45.019437], [-93.025706, 45.019864], [-93.027294, 45.021279], [-93.027602, 45.021859], [-93.028008, 45.022373], [-93.028302, 45.023537], [-93.029097, 45.023471], [-93.030359, 45.024179], [-93.029554, 45.025062], [-93.030217, 45.026375], [-93.03126, 45.026981], [-93.030364, 45.029799], [-93.032025, 45.030167], [-93.032406, 45.030175], [-93.0322, 45.030856], [-93.031748, 45.031644], [-93.03232, 45.032858], [-93.029743, 45.033604], [-93.029815, 45.034658], [-93.027702, 45.036288], [-93.0263, 45.035378], [-93.025943, 45.033684], [-93.025622, 45.031789], [-93.024873, 45.032021], [-93.024379, 45.032741], [-93.022772, 45.033119], [-93.021788, 45.032783], [-93.021157, 45.03223], [-93.017605, 45.032519], [-93.016224, 45.033025], [-93.013402, 45.031829], [-93.01119, 45.031653], [-93.01077, 45.032538], [-93.010336, 45.033047], [-93.009851, 45.034901], [-93.007994, 45.035581], [-93.005658, 45.035661], [-93.004533, 45.035572], [-93.002982, 45.036141], [-93.001036, 45.036346], [-93.000267, 45.03716], [-92.998096, 45.038054], [-92.996288, 45.039504], [-92.996324, 45.040036], [-92.995239, 45.041315], [-92.994292, 45.044434], [-92.993428, 45.045099], [-92.992685, 45.045523], [-92.993941, 45.045954], [-92.995019, 45.046898], [-92.996678, 45.047975], [-92.995529, 45.048632], [-92.994894, 45.049558], [-92.993564, 45.050584], [-92.991463, 45.050305], [-92.990913, 45.050147], [-92.989704, 45.049861], [-92.988957, 45.048568], [-92.987572, 45.048094], [-92.988003, 45.047583], [-92.989156, 45.046925], [-92.989054, 45.045423], [-92.989749, 45.044602], [-92.989353, 45.039199], [-92.988922, 45.038918], [-92.989095, 45.038771], [-92.991664, 45.038093], [-92.99246, 45.036834], [-92.993813, 45.035626], [-92.993457, 45.034662], [-92.992063, 45.03385], [-92.991988, 45.033396], [-92.993936, 45.032882], [-92.995826, 45.031915], [-92.996018, 45.031162], [-92.995301, 45.030256], [-92.99576, 45.028457], [-92.995008, 45.027034], [-92.994565, 45.026475], [-92.993626, 45.024614], [-92.995175, 45.023822], [-92.994377, 45.023007], [-92.993673, 45.022114], [-92.992117, 45.022384], [-92.99068, 45.022746], [-92.989463, 45.022591], [-92.98908, 45.022622], [-92.988346, 45.022529], [-92.986211, 45.022898], [-92.984867, 45.024364], [-92.984216, 45.026253], [-92.982467, 45.025346], [-92.982309, 45.021084], [-92.981626, 45.019727], [-92.983246, 45.018395], [-92.983165, 45.017884], [-92.983407, 45.016933], [-92.982194, 45.015697], [-92.981423, 45.01423], [-92.980294, 45.013573], [-92.980431, 45.013026], [-92.979182, 45.012453], [-92.97737, 45.012222], [-92.976843, 45.013409], [-92.974682, 45.012643], [-92.975662, 45.010851], [-92.978939, 45.009987], [-92.979181, 45.009038], [-92.977167, 45.007864], [-92.976357, 45.006262], [-92.976527, 45.005596], [-92.976383, 45.004699], [-92.977253, 45.00395], [-92.978794, 45.00334], [-92.980416, 45.003547], [-92.981537, 45.003264], [-92.983643, 45.002999], [-92.984898, 45.001627], [-92.984371, 45.000631], [-92.983744, 45.000264], [-92.983425, 44.999952], [-92.984012, 44.999618], [-92.985005, 44.996917], [-92.98493, 44.995805], [-92.985013, 44.995279], [-92.986567, 44.993964], [-92.987134, 44.993134], [-92.98868, 44.993257], [-92.991361, 44.993165], [-92.993003, 44.993863], [-92.99399, 44.993828], [-92.99494, 44.993904], [-92.996622, 44.993846], [-92.997408, 44.993242], [-93.000138, 44.994857], [-93.001534, 44.994808], [-93.002847, 44.993796], [-93.003737, 44.993539], [-93.004283, 44.993116], [-93.004705, 44.992876]]], "type": "Polygon"}, "id": "catchment", "properties": {"catchmentID": "1100118"}, "type": "Feature"}, {"geometry": {"coordinates": [[[-93.000192, 45.000058], [-93.000204, 44.999789], [-92.999442, 44.999772], [-92.99943, 45.000041], [-93.000192, 45.000058]]], "type": "Polygon"}, "id": "splitCatchment", "properties": {}, "type": "Feature"}], "type": "FeatureCollection"}
    assert actual == expected

def test_splitcatchment_2():
    actual = splitcatchment(-105.45073360839196, 39.69008287928581, False)
    expected = {"features": [{"geometry": {"coordinates": [[[-105.456309, 39.666973], [-105.458051, 39.668388], [-105.459662, 39.669245], [-105.461136, 39.670308], [-105.46308, 39.671158], [-105.464951, 39.672113], [-105.468019, 39.673454], [-105.469688, 39.676515], [-105.471109, 39.678062], [-105.472141, 39.679432], [-105.474907, 39.678239], [-105.476793, 39.67848], [-105.478292, 39.678273], [-105.48108, 39.676008], [-105.484528, 39.67547], [-105.48718, 39.676614], [-105.489364, 39.677433], [-105.490482, 39.678239], [-105.492087, 39.678642], [-105.492448, 39.678904], [-105.492654, 39.679013], [-105.492867, 39.679114], [-105.494022, 39.680136], [-105.497628, 39.681797], [-105.499117, 39.682288], [-105.499109, 39.683967], [-105.498523, 39.685748], [-105.496394, 39.688175], [-105.495776, 39.690486], [-105.49486, 39.691729], [-105.493463, 39.692886], [-105.491448, 39.693491], [-105.490085, 39.693057], [-105.487832, 39.692974], [-105.485922, 39.693959], [-105.482545, 39.697477], [-105.483354, 39.697924], [-105.48559, 39.700082], [-105.481548, 39.703427], [-105.479092, 39.705983], [-105.475948, 39.707613], [-105.475553, 39.708023], [-105.475201, 39.70805], [-105.474792, 39.707329], [-105.473216, 39.706273], [-105.471847, 39.705741], [-105.468362, 39.703327], [-105.466444, 39.70171], [-105.463116, 39.700147], [-105.459733, 39.699666], [-105.457786, 39.699467], [-105.451178, 39.698253], [-105.446021, 39.698024], [-105.444036, 39.697786], [-105.441267, 39.698244], [-105.439641, 39.698256], [-105.438609, 39.698017], [-105.436889, 39.697817], [-105.436291, 39.696578], [-105.435648, 39.695978], [-105.43496, 39.694347], [-105.434777, 39.693482], [-105.435011, 39.692401], [-105.434986, 39.689143], [-105.435756, 39.687223], [-105.435319, 39.686981], [-105.4341, 39.68277], [-105.433662, 39.68228], [-105.432904, 39.681298], [-105.429454, 39.678883], [-105.428098, 39.677574], [-105.426703, 39.676476], [-105.426826, 39.675818], [-105.426635, 39.673253], [-105.429552, 39.67325], [-105.431966, 39.67129], [-105.434069, 39.672198], [-105.43517, 39.673276], [-105.43899, 39.674057], [-105.440033, 39.674402], [-105.442764, 39.674026], [-105.44513, 39.672775], [-105.447253, 39.67048], [-105.448721, 39.669845], [-105.45009, 39.66912], [-105.452549, 39.669084], [-105.454893, 39.668401], [-105.455433, 39.667163], [-105.456309, 39.666973]]], "type": "Polygon"}, "id": "catchment", "properties": {"catchmentID": "2885288"}, "type": "Feature"}, {"geometry": {"coordinates": [[[-105.475553, 39.708023], [-105.475518, 39.707757], [-105.475869, 39.70773], [-105.475834, 39.707464], [-105.476185, 39.707437], [-105.476536, 39.707411], [-105.476501, 39.707144], [-105.476853, 39.707118], [-105.477204, 39.707091], [-105.477169, 39.706825], [-105.47752, 39.706798], [-105.477871, 39.706771], [-105.477836, 39.706505], [-105.478188, 39.706478], [-105.478539, 39.706452], [-105.478504, 39.706185], [-105.478855, 39.706159], [-105.479206, 39.706132], [-105.479171, 39.705866], [-105.479522, 39.705839], [-105.479452, 39.705306], [-105.479803, 39.705279], [-105.479768, 39.705013], [-105.48012, 39.704986], [-105.480084, 39.70472], [-105.480436, 39.704693], [-105.480401, 39.704427], [-105.480752, 39.7044], [-105.480717, 39.704134], [-105.481068, 39.704107], [-105.481033, 39.703841], [-105.481384, 39.703814], [-105.481349, 39.703548], [-105.4817, 39.703521], [-105.481665, 39.703255], [-105.482016, 39.703228], [-105.481981, 39.702962], [-105.482333, 39.702935], [-105.482297, 39.702669], [-105.482649, 39.702642], [-105.482614, 39.702376], [-105.482965, 39.702349], [-105.48293, 39.702083], [-105.483281, 39.702056], [-105.483246, 39.70179], [-105.483597, 39.701763], [-105.483562, 39.701497], [-105.483913, 39.70147], [-105.484264, 39.701443], [-105.484229, 39.701177], [-105.484581, 39.70115], [-105.484545, 39.700884], [-105.484897, 39.700857], [-105.484862, 39.700591], [-105.485213, 39.700564], [-105.485178, 39.700298], [-105.485529, 39.700271], [-105.485459, 39.699738], [-105.485107, 39.699765], [-105.485072, 39.699499], [-105.484721, 39.699525], [-105.48465, 39.698992], [-105.484299, 39.699019], [-105.484229, 39.698486], [-105.483878, 39.698513], [-105.483842, 39.698247], [-105.483491, 39.698273], [-105.483421, 39.697741], [-105.482718, 39.697794], [-105.482648, 39.697261], [-105.482999, 39.697234], [-105.482964, 39.696968], [-105.483315, 39.696941], [-105.48328, 39.696675], [-105.483631, 39.696648], [-105.483561, 39.696116], [-105.483912, 39.696089], [-105.483877, 39.695823], [-105.484228, 39.695796], [-105.484193, 39.69553], [-105.484544, 39.695503], [-105.484509, 39.695236], [-105.484861, 39.69521], [-105.484825, 39.694943], [-105.485177, 39.694917], [-105.485141, 39.69465], [-105.485493, 39.694624], [-105.485458, 39.694357], [-105.485809, 39.694331], [-105.485774, 39.694064], [-105.486125, 39.694038], [-105.48609, 39.693771], [-105.486441, 39.693745], [-105.486792, 39.693718], [-105.486757, 39.693451], [-105.487108, 39.693425], [-105.487073, 39.693158], [-105.490234, 39.692918], [-105.490269, 39.693185], [-105.490621, 39.693158], [-105.490656, 39.693424], [-105.492763, 39.693264], [-105.492728, 39.692998], [-105.493079, 39.692971], [-105.493431, 39.692944], [-105.493396, 39.692678], [-105.493747, 39.692651], [-105.494098, 39.692625], [-105.494063, 39.692358], [-105.494414, 39.692332], [-105.494379, 39.692065], [-105.49473, 39.692038], [-105.494695, 39.691772], [-105.495046, 39.691745], [-105.494976, 39.691213], [-105.495327, 39.691186], [-105.495292, 39.69092], [-105.495643, 39.690893], [-105.495608, 39.690626], [-105.495959, 39.6906], [-105.495818, 39.689534], [-105.496169, 39.689508], [-105.496064, 39.688708], [-105.496415, 39.688682], [-105.496344, 39.688149], [-105.496696, 39.688122], [-105.496625, 39.68759], [-105.496976, 39.687563], [-105.496941, 39.687296], [-105.497292, 39.68727], [-105.497257, 39.687003], [-105.497608, 39.686977], [-105.497573, 39.68671], [-105.497924, 39.686684], [-105.497889, 39.686417], [-105.49824, 39.68639], [-105.49817, 39.685858], [-105.498521, 39.685831], [-105.498451, 39.685298], [-105.498802, 39.685272], [-105.498732, 39.684739], [-105.499083, 39.684712], [-105.498942, 39.683647], [-105.499293, 39.68362], [-105.499117, 39.682288], [-105.498766, 39.682315], [-105.498731, 39.682048], [-105.498028, 39.682102], [-105.497993, 39.681835], [-105.497642, 39.681862], [-105.497607, 39.681596], [-105.496904, 39.681649], [-105.496869, 39.681383], [-105.496518, 39.681409], [-105.496483, 39.681143], [-105.496131, 39.68117], [-105.496096, 39.680903], [-105.495394, 39.680957], [-105.495359, 39.68069], [-105.495007, 39.680717], [-105.494972, 39.680451], [-105.494621, 39.680478], [-105.494586, 39.680211], [-105.493883, 39.680265], [-105.493813, 39.679732], [-105.493462, 39.679758], [-105.493427, 39.679492], [-105.493075, 39.679519], [-105.493005, 39.678986], [-105.492303, 39.679039], [-105.492232, 39.678507], [-105.491179, 39.678587], [-105.491144, 39.67832], [-105.490441, 39.678374], [-105.490406, 39.678107], [-105.490055, 39.678134], [-105.49002, 39.677868], [-105.489669, 39.677894], [-105.489598, 39.677362], [-105.488896, 39.677415], [-105.488861, 39.677149], [-105.48851, 39.677175], [-105.488474, 39.676909], [-105.487772, 39.676962], [-105.487737, 39.676696], [-105.487034, 39.676749], [-105.486999, 39.676483], [-105.486648, 39.67651], [-105.486613, 39.676243], [-105.486262, 39.67627], [-105.486227, 39.676004], [-105.485524, 39.676057], [-105.485489, 39.675791], [-105.485138, 39.675817], [-105.485103, 39.675551], [-105.48124, 39.675844], [-105.481275, 39.676111], [-105.480924, 39.676137], [-105.480573, 39.676164], [-105.480608, 39.67643], [-105.480257, 39.676457], [-105.480292, 39.676723], [-105.479941, 39.67675], [-105.479976, 39.677016], [-105.479625, 39.677043], [-105.47966, 39.677309], [-105.479309, 39.677336], [-105.479344, 39.677602], [-105.478993, 39.677629], [-105.479028, 39.677895], [-105.478677, 39.677922], [-105.478712, 39.678189], [-105.477307, 39.678295], [-105.476956, 39.678322], [-105.476991, 39.678588], [-105.47664, 39.678615], [-105.476605, 39.678348], [-105.475551, 39.678428], [-105.475516, 39.678162], [-105.474463, 39.678242], [-105.474498, 39.678508], [-105.474146, 39.678535], [-105.473795, 39.678562], [-105.47383, 39.678828], [-105.473479, 39.678855], [-105.473128, 39.678881], [-105.473163, 39.679148], [-105.472812, 39.679174], [-105.472461, 39.679201], [-105.472496, 39.679467], [-105.472145, 39.679494], [-105.47211, 39.679228], [-105.471758, 39.679254], [-105.471653, 39.678455], [-105.471302, 39.678482], [-105.471232, 39.677949], [-105.47088, 39.677976], [-105.47081, 39.677443], [-105.470459, 39.677469], [-105.470424, 39.677203], [-105.470073, 39.67723], [-105.470003, 39.676697], [-105.469651, 39.676724], [-105.469546, 39.675924], [-105.469195, 39.675951], [-105.46909, 39.675152], [-105.468738, 39.675179], [-105.468598, 39.674113], [-105.468247, 39.67414], [-105.468142, 39.673341], [-105.467439, 39.673394], [-105.467404, 39.673127], [-105.467053, 39.673154], [-105.467018, 39.672888], [-105.466667, 39.672914], [-105.466632, 39.672648], [-105.465929, 39.672701], [-105.465894, 39.672435], [-105.465543, 39.672461], [-105.465508, 39.672195], [-105.464806, 39.672248], [-105.464771, 39.671982], [-105.464419, 39.672008], [-105.464384, 39.671742], [-105.464033, 39.671769], [-105.463998, 39.671502], [-105.463647, 39.671529], [-105.463612, 39.671263], [-105.463261, 39.671289], [-105.463226, 39.671023], [-105.462523, 39.671076], [-105.462488, 39.67081], [-105.462137, 39.670836], [-105.462102, 39.67057], [-105.4614, 39.670623], [-105.461365, 39.670357], [-105.461013, 39.670383], [-105.460978, 39.670117], [-105.460627, 39.670144], [-105.460592, 39.669877], [-105.460241, 39.669904], [-105.460171, 39.669371], [-105.45982, 39.669398], [-105.459785, 39.669131], [-105.459434, 39.669158], [-105.459398, 39.668891], [-105.458696, 39.668945], [-105.458661, 39.668678], [-105.45831, 39.668705], [-105.458275, 39.668438], [-105.457924, 39.668465], [-105.457889, 39.668199], [-105.457538, 39.668225], [-105.457467, 39.667693], [-105.457116, 39.667719], [-105.457081, 39.667453], [-105.45673, 39.667479], [-105.456695, 39.667213], [-105.456344, 39.66724], [-105.456309, 39.666973], [-105.455255, 39.667053], [-105.455361, 39.667852], [-105.455009, 39.667879], [-105.45508, 39.668411], [-105.454377, 39.668465], [-105.454026, 39.668491], [-105.454061, 39.668758], [-105.453359, 39.668811], [-105.453008, 39.668837], [-105.453043, 39.669104], [-105.451287, 39.669237], [-105.451252, 39.66897], [-105.449848, 39.669077], [-105.449883, 39.669343], [-105.449531, 39.66937], [-105.44918, 39.669396], [-105.449215, 39.669663], [-105.448864, 39.669689], [-105.448899, 39.669955], [-105.448197, 39.670009], [-105.447846, 39.670035], [-105.447881, 39.670302], [-105.44753, 39.670328], [-105.447178, 39.670355], [-105.447213, 39.670621], [-105.446862, 39.670648], [-105.446897, 39.670914], [-105.446546, 39.670941], [-105.446616, 39.671473], [-105.446265, 39.6715], [-105.4463, 39.671766], [-105.445949, 39.671793], [-105.445984, 39.672059], [-105.445633, 39.672086], [-105.445668, 39.672352], [-105.445317, 39.672379], [-105.445352, 39.672645], [-105.445, 39.672672], [-105.445035, 39.672938], [-105.444684, 39.672965], [-105.444333, 39.672991], [-105.444368, 39.673258], [-105.444017, 39.673284], [-105.444052, 39.673551], [-105.443701, 39.673577], [-105.44335, 39.673604], [-105.443385, 39.67387], [-105.442682, 39.673923], [-105.442331, 39.67395], [-105.442366, 39.674216], [-105.439557, 39.674429], [-105.439522, 39.674162], [-105.439171, 39.674189], [-105.439136, 39.673922], [-105.438082, 39.674002], [-105.438047, 39.673736], [-105.437345, 39.673789], [-105.436994, 39.673815], [-105.437064, 39.674348], [-105.437415, 39.674321], [-105.437485, 39.674854], [-105.437836, 39.674828], [-105.437906, 39.67536], [-105.438257, 39.675334], [-105.438362, 39.676133], [-105.438713, 39.676107], [-105.438783, 39.676639], [-105.439134, 39.676613], [-105.439239, 39.677412], [-105.439591, 39.677385], [-105.439661, 39.677918], [-105.440012, 39.677892], [-105.440047, 39.678158], [-105.440398, 39.678132], [-105.440468, 39.678664], [-105.440819, 39.678638], [-105.440854, 39.678904], [-105.441205, 39.678878], [-105.44124, 39.679144], [-105.441592, 39.679117], [-105.441662, 39.67965], [-105.442013, 39.679624], [-105.442048, 39.67989], [-105.442399, 39.679863], [-105.442434, 39.68013], [-105.442785, 39.680103], [-105.44282, 39.68037], [-105.443171, 39.680343], [-105.443206, 39.68061], [-105.443558, 39.680583], [-105.443593, 39.680849], [-105.443944, 39.680823], [-105.443979, 39.681089], [-105.444681, 39.681036], [-105.444716, 39.681302], [-105.445068, 39.681276], [-105.445103, 39.681542], [-105.445454, 39.681516], [-105.445489, 39.681782], [-105.44584, 39.681756], [-105.445875, 39.682022], [-105.446226, 39.681995], [-105.446261, 39.682262], [-105.446612, 39.682235], [-105.446682, 39.682768], [-105.447736, 39.682688], [-105.447771, 39.682955], [-105.448122, 39.682928], [-105.448192, 39.683461], [-105.448544, 39.683434], [-105.448859, 39.685832], [-105.44921, 39.685805], [-105.449596, 39.688735], [-105.449947, 39.688709], [-105.449982, 39.688975], [-105.450333, 39.688949], [-105.450578, 39.690813], [-105.45093, 39.690787], [-105.450965, 39.691053], [-105.451316, 39.691027], [-105.451561, 39.692891], [-105.451913, 39.692865], [-105.451983, 39.693398], [-105.452334, 39.693371], [-105.452404, 39.693904], [-105.452755, 39.693877], [-105.45279, 39.694144], [-105.453142, 39.694117], [-105.453177, 39.694383], [-105.453528, 39.694357], [-105.454124, 39.698885], [-105.454827, 39.698832], [-105.454862, 39.699099], [-105.455916, 39.699019], [-105.455951, 39.699285], [-105.457004, 39.699205], [-105.45704, 39.699472], [-105.458093, 39.699392], [-105.458129, 39.699658], [-105.459885, 39.699525], [-105.45992, 39.699792], [-105.460974, 39.699712], [-105.461009, 39.699978], [-105.462063, 39.699898], [-105.462098, 39.700165], [-105.463152, 39.700085], [-105.463187, 39.700351], [-105.46389, 39.700298], [-105.463925, 39.700565], [-105.464276, 39.700538], [-105.464311, 39.700804], [-105.464662, 39.700778], [-105.464697, 39.701044], [-105.465049, 39.701017], [-105.465084, 39.701284], [-105.465786, 39.701231], [-105.465822, 39.701497], [-105.466173, 39.70147], [-105.466208, 39.701737], [-105.466559, 39.70171], [-105.466594, 39.701976], [-105.466946, 39.70195], [-105.466981, 39.702216], [-105.467332, 39.70219], [-105.467402, 39.702722], [-105.467754, 39.702696], [-105.467789, 39.702962], [-105.46814, 39.702936], [-105.46821, 39.703468], [-105.468562, 39.703442], [-105.468597, 39.703708], [-105.468948, 39.703681], [-105.468983, 39.703948], [-105.469334, 39.703921], [-105.469369, 39.704188], [-105.469721, 39.704161], [-105.469756, 39.704427], [-105.470107, 39.704401], [-105.470142, 39.704667], [-105.470494, 39.70464], [-105.470529, 39.704907], [-105.47088, 39.70488], [-105.470915, 39.705147], [-105.471267, 39.70512], [-105.471302, 39.705386], [-105.471653, 39.70536], [-105.471723, 39.705892], [-105.472426, 39.705839], [-105.472461, 39.706106], [-105.473164, 39.706052], [-105.473199, 39.706319], [-105.47355, 39.706292], [-105.473585, 39.706558], [-105.473937, 39.706532], [-105.473972, 39.706798], [-105.474323, 39.706771], [-105.474393, 39.707304], [-105.474745, 39.707278], [-105.47478, 39.707544], [-105.475131, 39.707517], [-105.475201, 39.70805], [-105.475553, 39.708023]]], "type": "Polygon"}, "id": "splitCatchment", "properties": {}, "type": "Feature"}], "type": "FeatureCollection"}
    assert actual == expected

######################## Flowtrace Tests ################################

def test_flowtrace_1():
    actual = flowtrace(-93.06089554438601, 41.65410801168578, True, "up")
    expected = {"features": [{"geometry": {"coordinates": [[-93.061987, 41.660757], [-93.06214, 41.66062], [-93.062293, 41.660505], [-93.062598, 41.659956], [-93.06269, 41.659567], [-93.062934, 41.65927], [-93.064522, 41.657967], [-93.066506, 41.656618], [-93.067239, 41.655772]], "type": "LineString"}, "id": "upstreamFlowline", "properties": {"comid": 6981570, "gnis_name": "Sewer Creek", "intersectionPoint": (41.655772, -93.067239), "measure": 19.06, "raindropPathDist": 613.36, "reachcode": "07080105001380"}, "type": "Feature"}, {"geometry": {"coordinates": [[-93.060983, 41.654114], [-93.061346, 41.654122], [-93.061697, 41.654398], [-93.06206, 41.654406], [-93.062422, 41.654415], [-93.062785, 41.654423], [-93.063148, 41.654431], [-93.063511, 41.65444], [-93.063873, 41.654448], [-93.064236, 41.654456], [-93.064599, 41.654464], [-93.064961, 41.654473], [-93.065324, 41.654481], [-93.065687, 41.654489], [-93.066038, 41.654765], [-93.06639, 41.655042], [-93.066752, 41.65505], [-93.067104, 41.655326], [-93.067239, 41.655772]], "type": "LineString"}, "id": "raindropPath", "properties": {}, "type": "Feature"}], "type": "FeatureCollection"}
    assert actual == expected

def test_flowtrace_2():
    actual = flowtrace(-95, 35, True, "down")
    expected = {"features": [{"geometry": {"coordinates": [[-94.993834, 34.997959], [-94.993417, 34.99828], [-94.992663, 34.998418], [-94.992385, 34.998648], [-94.992302, 34.998808], [-94.992303, 34.999014], [-94.992667, 34.999243], [-94.993309, 34.999608], [-94.993393, 34.99986], [-94.993365, 35.000102]], "type": "LineString"}, "id": "downstreamFlowline", "properties": {"comid": 941110237, "gnis_name": "Brazil Creek", "intersectionPoint": (34.997959, -94.993834), "measure": 19.7, "raindropPathDist": 789.09, "reachcode": "11110105000066"}, "type": "Feature"}, {"geometry": {"coordinates": [[-95.000059, 35.000116], [-94.999728, 35.000114], [-94.9994, 34.999843], [-94.999068, 34.99984], [-94.998741, 34.999569], [-94.999075, 34.999304], [-94.998748, 34.999033], [-94.998416, 34.99903], [-94.998085, 34.999027], [-94.997753, 34.999024], [-94.997422, 34.999021], [-94.997091, 34.999019], [-94.996763, 34.998748], [-94.996435, 34.998477], [-94.996107, 34.998206], [-94.995779, 34.997935], [-94.995451, 34.997664], [-94.99512, 34.997661], [-94.994788, 34.997658], [-94.994457, 34.997655], [-94.994125, 34.997652], [-94.993666, 34.997753], [-94.993834, 34.997845], [-94.993834, 34.997959]], "type": "LineString"}, "id": "raindropPath", "properties": {}, "type": "Feature"}], "type": "FeatureCollection"}
    assert actual == expected

def test_flowtrace_3():
    actual = flowtrace(-83.60284067411037, 33.170407741228146, True, "none")
    expected = {"features": [{"geometry": {"coordinates": [[-83.616758, 33.160362], [-83.614934, 33.160339], [-83.61409, 33.160156], [-83.61292, 33.159676], [-83.610987, 33.158187], [-83.609354, 33.156859], [-83.608374, 33.155623], [-83.606904, 33.154158], [-83.606034, 33.153334], [-83.605979, 33.153151]], "type": "LineString"}, "id": "nhdFlowline", "properties": {"comid": 1056949, "gnis_name": "Glady Creek", "intersectionPoint": (33.158187, -83.610987), "measure": 54.26, "raindropPathDist": 1924.43, "reachcode": "03070101001081"}, "type": "Feature"}, {"geometry": {"coordinates": [[-83.602781, 33.170482], [-83.602823, 33.170215], [-83.602865, 33.169949], [-83.602908, 33.169683], [-83.60295, 33.169416], [-83.602671, 33.169115], [-83.602713, 33.168848], [-83.602755, 33.168582], [-83.602797, 33.168315], [-83.602839, 33.168049], [-83.602881, 33.167782], [-83.602923, 33.167516], [-83.602966, 33.167249], [-83.603008, 33.166983], [-83.602729, 33.166682], [-83.602771, 33.166415], [-83.602813, 33.166149], [-83.602855, 33.165882], [-83.602897, 33.165616], [-83.602939, 33.165349], [-83.602981, 33.165083], [-83.603345, 33.164851], [-83.603708, 33.16462], [-83.604071, 33.164388], [-83.604434, 33.164157], [-83.604797, 33.163925], [-83.60516, 33.163694], [-83.605481, 33.163729], [-83.605802, 33.163764], [-83.606165, 33.163532], [-83.606528, 33.163301], [-83.60657, 33.163034], [-83.606612, 33.162768], [-83.606654, 33.162501], [-83.606696, 33.162235], [-83.607059, 33.162003], [-83.607101, 33.161737], [-83.607143, 33.16147], [-83.607186, 33.161204], [-83.607228, 33.160937], [-83.60727, 33.160671], [-83.607312, 33.160404], [-83.607354, 33.160138], [-83.607396, 33.159872], [-83.607438, 33.159605], [-83.60748, 33.159339], [-83.607843, 33.159107], [-83.608164, 33.159142], [-83.608485, 33.159177], [-83.608806, 33.159212], [-83.609085, 33.159513], [-83.609406, 33.159548], [-83.609727, 33.159583], [-83.61009, 33.159352], [-83.610453, 33.15912], [-83.610816, 33.158889], [-83.610858, 33.158622], [-83.610987, 33.158187]], "type": "LineString"}, "id": "raindropPath", "properties": {}, "type": "Feature"}], "type": "FeatureCollection"}
    assert actual == expected

    ###################### Utils Tests ####################################


geom = Polygon([[-93.004705, 44.992876], [-93.005282, 44.993016], [-93.005109, 44.994369], [-93.006721, 44.994937], [-93.009142, 44.995942], [-93.010043, 44.997435], [-93.01047, 44.998566], [-93.00983, 45.000034], [-93.012506, 45.002472], [-93.015846, 45.002357], [-93.016935, 45.00331], [-93.017277, 45.00575], [-93.018238, 45.006374], [-93.019473, 45.007456], [-93.016408, 45.009028], [-93.015893, 45.010429], [-93.014668, 45.010784], [-93.014747, 45.011952], [-93.017769, 45.011633], [-93.024573, 45.011535], [-93.027889, 45.012941], [-93.030205, 45.013294], [-93.030629, 45.014416], [-93.031776, 45.01516], [-93.032286, 45.015607], [-93.03194, 45.015903], [-93.031281, 45.016242], [-93.030671, 45.016766], [-93.028489, 45.017341], [-93.029079, 45.019437], [-93.025706, 45.019864], [-93.027294, 45.021279], [-93.027602, 45.021859], [-93.028008, 45.022373], [-93.028302, 45.023537], [-93.029097, 45.023471], [-93.030359, 45.024179], [-93.029554, 45.025062], [-93.030217, 45.026375], [-93.03126, 45.026981], [-93.030364, 45.029799], [-93.032025, 45.030167], [-93.032406, 45.030175], [-93.0322, 45.030856], [-93.031748, 45.031644], [-93.03232, 45.032858], [-93.029743, 45.033604], [-93.029815, 45.034658], [-93.027702, 45.036288], [-93.0263, 45.035378], [-93.025943, 45.033684], [-93.025622, 45.031789], [-93.024873, 45.032021], [-93.024379, 45.032741], [-93.022772, 45.033119], [-93.021788, 45.032783], [-93.021157, 45.03223], [-93.017605, 45.032519], [-93.016224, 45.033025], [-93.013402, 45.031829], [-93.01119, 45.031653], [-93.01077, 45.032538], [-93.010336, 45.033047], [-93.009851, 45.034901], [-93.007994, 45.035581], [-93.005658, 45.035661], [-93.004533, 45.035572], [-93.002982, 45.036141], [-93.001036, 45.036346], [-93.000267, 45.03716], [-92.998096, 45.038054], [-92.996288, 45.039504], [-92.996324, 45.040036], [-92.995239, 45.041315], [-92.994292, 45.044434], [-92.993428, 45.045099], [-92.992685, 45.045523], [-92.993941, 45.045954], [-92.995019, 45.046898], [-92.996678, 45.047975], [-92.995529, 45.048632], [-92.994894, 45.049558], [-92.993564, 45.050584], [-92.991463, 45.050305], [-92.990913, 45.050147], [-92.989704, 45.049861], [-92.988957, 45.048568], [-92.987572, 45.048094], [-92.988003, 45.047583], [-92.989156, 45.046925], [-92.989054, 45.045423], [-92.989749, 45.044602], [-92.989353, 45.039199], [-92.988922, 45.038918], [-92.989095, 45.038771], [-92.991664, 45.038093], [-92.99246, 45.036834], [-92.993813, 45.035626], [-92.993457, 45.034662], [-92.992063, 45.03385], [-92.991988, 45.033396], [-92.993936, 45.032882], [-92.995826, 45.031915], [-92.996018, 45.031162], [-92.995301, 45.030256], [-92.99576, 45.028457], [-92.995008, 45.027034], [-92.994565, 45.026475], [-92.993626, 45.024614], [-92.995175, 45.023822], [-92.994377, 45.023007], [-92.993673, 45.022114], [-92.992117, 45.022384], [-92.99068, 45.022746], [-92.989463, 45.022591], [-92.98908, 45.022622], [-92.988346, 45.022529], [-92.986211, 45.022898], [-92.984867, 45.024364], [-92.984216, 45.026253], [-92.982467, 45.025346], [-92.982309, 45.021084], [-92.981626, 45.019727], [-92.983246, 45.018395], [-92.983165, 45.017884], [-92.983407, 45.016933], [-92.982194, 45.015697], [-92.981423, 45.01423], [-92.980294, 45.013573], [-92.980431, 45.013026], [-92.979182, 45.012453], [-92.97737, 45.012222], [-92.976843, 45.013409], [-92.974682, 45.012643], [-92.975662, 45.010851], [-92.978939, 45.009987], [-92.979181, 45.009038], [-92.977167, 45.007864], [-92.976357, 45.006262], [-92.976527, 45.005596], [-92.976383, 45.004699], [-92.977253, 45.00395], [-92.978794, 45.00334], [-92.980416, 45.003547], [-92.981537, 45.003264], [-92.983643, 45.002999], [-92.984898, 45.001627], [-92.984371, 45.000631], [-92.983744, 45.000264], [-92.983425, 44.999952], [-92.984012, 44.999618], [-92.985005, 44.996917], [-92.98493, 44.995805], [-92.985013, 44.995279], [-92.986567, 44.993964], [-92.987134, 44.993134], [-92.98868, 44.993257], [-92.991361, 44.993165], [-92.993003, 44.993863], [-92.99399, 44.993828], [-92.99494, 44.993904], [-92.996622, 44.993846], [-92.997408, 44.993242], [-93.000138, 44.994857], [-93.001534, 44.994808], [-93.002847, 44.993796], [-93.003737, 44.993539], [-93.004283, 44.993116], [-93.004705, 44.992876]])
splitpoly =   ({'type': 'Polygon', 'coordinates': [[(236174.99999999907, 2449455.000000002), (236174.99999999907, 2449425.000000002), (236234.99999999907, 2449425.000000002), (236234.99999999907, 2449455.000000002), (236174.99999999907, 2449455.000000002)]]}, 1.0)
transformToRaster, transformToWGS84 = get_coordsys()
flowlines = {'type': 'FeatureCollection', 'features': [{'type': 'Feature', 'id': 'nhdflowline_network.878461', 'geometry': {'type': 'MultiLineString', 'coordinates': [[[-93.000216, 45.012952, 0], [-93.001794, 45.01268, 0], [-93.002987, 45.012567, 0], [-93.003599, 45.012682, 0], [-93.003986, 45.012865, 0], [-93.004275, 45.01314, 0], [-93.004304, 45.014649, 0], [-93.0044, 45.015129, 0], [-93.00514, 45.015701, 0], [-93.005365, 45.016022, 0], [-93.005332, 45.016388, 0], [-93.005203, 45.01657, 0], [-93.005202, 45.016753, 0], [-93.005363, 45.016799, 0], [-93.007105, 45.016481, 0], [-93.008717, 45.016322, 0], [-93.009233, 45.016346, 0], [-93.009942, 45.016507, 0], [-93.010779, 45.016896, 0], [-93.011134, 45.016942, 0], [-93.01194, 45.016829, 0], [-93.012714, 45.016578, 0], [-93.013326, 45.016579, 0], [-93.013745, 45.016716, 0], [-93.01426, 45.017082, 0], [-93.014292, 45.017243, 0], [-93.01455, 45.017357, 0], [-93.015807, 45.017427, 0], [-93.016033, 45.017496, 0], [-93.016644, 45.017885, 0], [-93.01716, 45.018091, 0], [-93.018159, 45.01839, 0], [-93.019158, 45.018642, 0], [-93.021253, 45.01853, 0], [-93.021544, 45.018324, 0], [-93.022028, 45.017776, 0], [-93.022287, 45.01757, 0], [-93.022673, 45.017571, 0], [-93.023027, 45.017822, 0], [-93.023221, 45.018051, 0], [-93.023252, 45.01844, 0], [-93.02325, 45.019606, 0], [-93.023056, 45.020086, 0], [-93.023054, 45.020909, 0], [-93.023311, 45.021367, 0], [-93.023665, 45.021733, 0], [-93.02373, 45.021893, 0], [-93.023761, 45.022487, 0], [-93.023857, 45.022625, 0], [-93.024373, 45.02274, 0], [-93.025405, 45.022832, 0], [-93.025823, 45.023038, 0], [-93.025984, 45.023267, 0], [-93.026015, 45.02425, 0], [-93.026079, 45.024365, 0], [-93.026046, 45.024479, 0], [-93.026207, 45.024662, 0], [-93.027624, 45.025692, 0], [-93.02901, 45.026356, 0], [-93.029815, 45.026654, 0], [-93.030266, 45.026723, 0], [-93.030782, 45.026678, 0]]]}, 'geometry_name': 'the_geom', 'properties': {'comid': 1100118, 'fdate': '1999-06-25T04:00:00Z', 'resolution': 'Medium', 'gnis_id': ' ', 'gnis_name': ' ', 'lengthkm': 3.703, 'reachcode': '07010206000564', 'flowdir': 'With Digitized', 'wbareacomi': 0, 'ftype': 'StreamRiver', 'fcode': 46006, 'shape_length': 0.0414513666165651, 'streamleve': 3, 'streamorde': 1, 'streamcalc': 1, 'fromnode': 510118925.0, 'tonode': 510000905.0, 'hydroseq': 510186205.0, 'levelpathi': 510046121.0, 'pathlength': 2935.779, 'terminalpa': 350002977.0, 'arbolatesu': 3.703, 'divergence': 0, 'startflag': 1, 'terminalfl': 0, 'dnlevel': 3, 'uplevelpat': 0, 'uphydroseq': 0, 'dnlevelpat': 510046121.0, 'dnminorhyd': 0, 'dndraincou': 1, 'dnhydroseq': 510118335.0, 'frommeas': 0, 'tomeas': 100, 'rtndiv': 0, 'vpuin': 0, 'vpuout': 0, 'areasqkm': 14.1183, 'totdasqkm': 14.1183, 'divdasqkm': 14.1183, 'tidal': 0, 'totma': 0.160041948382, 'wbareatype': ' ', 'pathtimema': 29.2975270481, 'hwnodesqkm': 4.4325, 'maxelevraw': 28652, 'minelevraw': 26651, 'maxelevsmo': 28652, 'minelevsmo': 26651, 'slope': 0.00563027, 'elevfixed': '0', 'hwtype': 'H', 'slopelenkm': 3.554, 'qa_ma': 2.484, 'va_ma': 0.85701, 'qc_ma': 4, 'vc_ma': 0.8786, 'qe_ma': 4, 've_ma': 0.8786, 'qa_01': 1.363, 'va_01': 0.70729, 'qc_01': 1.391, 'vc_01': 0.63381, 'qe_01': 1.391, 've_01': 0.63381, 'qa_02': 1.337, 'va_02': 0.70323, 'qc_02': 1.563, 'vc_02': 0.6546, 'qe_02': 1.563, 've_02': 0.6546, 'qa_03': 3.039, 'va_03': 0.91902, 'qc_03': 43.081, 'vc_03': 2.3228, 'qe_03': 43.081, 've_03': 2.3228, 'qa_04': 7.824, 'va_04': 1.31732, 'qc_04': 14.345, 'vc_04': 1.43183, 'qe_04': 14.345, 've_04': 1.43183, 'qa_05': 4.611, 'va_05': 1.07034, 'qc_05': 5.76, 'vc_05': 1.00043, 'qe_05': 5.76, 've_05': 1.00043, 'qa_06': 3.028, 'va_06': 0.91785, 'qc_06': 3.581, 'vc_06': 0.84606, 'qe_06': 3.581, 've_06': 0.84606, 'qa_07': 2.033, 'va_07': 0.80164, 'qc_07': 2.327, 'vc_07': 0.73606, 'qe_07': 2.327, 've_07': 0.73606, 'qa_08': 1.519, 'va_08': 0.73092, 'qc_08': 1.421, 'vc_08': 0.63752, 'qe_08': 1.421, 've_08': 0.63752, 'qa_09': 0.949, 'va_09': 0.63753, 'qc_09': 1.673, 'vc_09': 0.66733, 'qe_09': 1.673, 've_09': 0.66733, 'qa_10': 0.759, 'va_10': 0.60071, 'qc_10': 1.579, 'vc_10': 0.65647, 'qe_10': 1.579, 've_10': 0.65647, 'qa_11': 3.357, 'va_11': 0.95216, 'qc_11': 18.703, 'vc_11': 1.60177, 'qe_11': 18.703, 've_11': 1.60177, 'qa_12': 1.426, 'va_12': 0.71698, 'qc_12': 1.566, 'vc_12': 0.65495, 'qe_12': 1.566, 've_12': 0.65495, 'lakefract': None, 'surfarea': None, 'rareahload': None, 'rpuid': '07c', 'vpuid': '07', 'enabled': 1}, 'bbox': [-93.030782, 45.012567, -93.000216, 45.026723]}], 'totalFeatures': 1, 'numberMatched': 1, 'numberReturned': 1, 'timeStamp': '2021-06-30T19:47:38.817Z', 'crs': {'type': 'name', 'properties': {'name': 'urn:ogc:def:crs:EPSG::4326'}}, 'bbox': [-93.030782, 45.012567, -93.000216, 45.026723]}
nhdFlowline = LineString([(-93.000216, 45.012952), (-93.001794, 45.01268), (-93.002987, 45.012567), (-93.003599, 45.012682), (-93.003986, 45.012865), (-93.004275, 45.01314), (-93.004304, 45.014649), (-93.0044, 45.015129), (-93.00514, 45.015701), (-93.005365, 45.016022), (-93.005332, 45.016388), (-93.005203, 45.01657), (-93.005202, 45.016753), (-93.005363, 45.016799), (-93.007105, 45.016481), (-93.008717, 45.016322), (-93.009233, 45.016346), (-93.009942, 45.016507), (-93.010779, 45.016896), (-93.011134, 45.016942), (-93.01194, 45.016829), (-93.012714, 45.016578), (-93.013326, 45.016579), (-93.013745, 45.016716), (-93.01426, 45.017082), (-93.014292, 45.017243), (-93.01455, 45.017357), (-93.015807, 45.017427), (-93.016033, 45.017496), (-93.016644, 45.017885), (-93.01716, 45.018091), (-93.018159, 45.01839), (-93.019158, 45.018642), (-93.021253, 45.01853), (-93.021544, 45.018324), (-93.022028, 45.017776), (-93.022287, 45.01757), (-93.022673, 45.017571), (-93.023027, 45.017822), (-93.023221, 45.018051), (-93.023252, 45.01844), (-93.02325, 45.019606), (-93.023056, 45.020086), (-93.023054, 45.020909), (-93.023311, 45.021367), (-93.023665, 45.021733), (-93.02373, 45.021893), (-93.023761, 45.022487), (-93.023857, 45.022625), (-93.024373, 45.02274), (-93.025405, 45.022832), (-93.025823, 45.023038), (-93.025984, 45.023267), (-93.026015, 45.02425), (-93.026079, 45.024365), (-93.026046, 45.024479), (-93.026207, 45.024662), (-93.027624, 45.025692), (-93.02901, 45.026356), (-93.029815, 45.026654), (-93.030266, 45.026723), (-93.030782, 45.026678)])
projected_xy = (236190.3043361867, 2449449.027428803)
flw, flwdir_transform = get_flowgrid(geom, transformToRaster)
raindropPath = LineString([(-93.00000748145598, 44.999919001788165), (-93.00038827660947, 44.99992751036108), (-93.00076907185931, 44.99993601785441), (-93.00114986720548, 44.999944524268265), (-93.00153066264802, 44.99995302960253), (-93.00191145818685, 44.99996153385728), (-93.00228023804749, 45.000239497885254), (-93.00266103530326, 45.00024800002032), (-93.0030418326553, 45.00025650107584), (-93.00342263010361, 45.000265001051794), (-93.0038034276482, 45.00027349994815), (-93.004184225289, 45.00028199776498), (-93.00456502302606, 45.000290494502195), (-93.00455301630132, 45.00055995576119), (-93.00454100948035, 45.00082941718957), (-93.00452900256317, 45.00109887878746), (-93.00451699554976, 45.00136834055483), (-93.00450498844013, 45.00163780249167), (-93.00487378821379, 45.00191576049221), (-93.00525459528954, 45.00192425530687), (-93.00563540246148, 45.00193274904191), (-93.00562339973264, 45.002202211435986), (-93.00599220722462, 45.002480166733925), (-93.00598020582784, 45.00274962950647), (-93.00634901779698, 45.00302758418206), (-93.0063370177323, 45.00329704733309), (-93.00670583417869, 45.00357500138634), (-93.00669383544616, 45.00384446491591), (-93.00668183661747, 45.00411392861508), (-93.00666983769264, 45.00438339248376), (-93.00665783867161, 45.004652856522036), (-93.00664583955444, 45.004922320729946), (-93.0066338403411, 45.00519178510745), (-93.00624101375261, 45.00545275864611), (-93.005848184115, 45.00571373119592), (-93.00583618156395, 45.00598319600344), (-93.00544334725635, 45.00624416769459), (-93.00543134298829, 45.00651363280203), (-93.00580017333361, 45.00679159144398), (-93.00616900672823, 45.007069549254716), (-93.00653784317213, 45.00734750623426), (-93.00652584309321, 45.00761697213857), (-93.00651384291812, 45.007886438212566), (-93.00650184264686, 45.0081559044563), (-93.00648984227941, 45.008425370869745), (-93.00647784181577, 45.00869483745284), (-93.00646584125595, 45.008964304205705), (-93.00683468932036, 45.00924226160879), (-93.00682269009292, 45.00951172874047), (-93.0068106907693, 45.00978119604197), (-93.00679869134952, 45.010050663513205), (-93.00678669183354, 45.010320131154245), (-93.0067746922214, 45.01058959896501), (-93.00676269251308, 45.01085906694556), (-93.00675069270858, 45.011128535095885), (-93.00711955382286, 45.01140649313206), (-93.00748841798685, 45.01168445033706), (-93.00747642094352, 45.01195391907567), (-93.00746442380404, 45.0122233879841), (-93.00745242656839, 45.01249285706234), (-93.00782129806828, 45.01277081406387), (-93.008190172618, 45.01304877023426), (-93.00817817814372, 45.01331823990086), (-93.00816618357328, 45.013587709737344), (-93.00815418890673, 45.0138571797437), (-93.00853506403047, 45.01386566549513), (-93.008142194144, 45.014126649919945), (-93.0077493212076, 45.01438763335604), (-93.00735644522122, 45.01464861580347), (-93.00734444712005, 45.014918086410624), (-93.00733244892271, 45.015187557187716), (-93.0073204506292, 45.01545702813471), (-93.0073084522395, 45.015726499251635), (-93.00729645375364, 45.01599597053852), (-93.00766534382817, 45.01627393026104), (-93.00804623258092, 45.01628241744689), (-93.00842712142982, 45.016290903552864), (-93.008717, 45.016322)])


def test_get_local_catchment():
    actual = get_local_catchment(-93, 45)
    expected = '1100118',  Polygon([[-93.004705, 44.992876], [-93.005282, 44.993016], [-93.005109, 44.994369], [-93.006721, 44.994937], [-93.009142, 44.995942], [-93.010043, 44.997435], [-93.01047, 44.998566], [-93.00983, 45.000034], [-93.012506, 45.002472], [-93.015846, 45.002357], [-93.016935, 45.00331], [-93.017277, 45.00575], [-93.018238, 45.006374], [-93.019473, 45.007456], [-93.016408, 45.009028], [-93.015893, 45.010429], [-93.014668, 45.010784], [-93.014747, 45.011952], [-93.017769, 45.011633], [-93.024573, 45.011535], [-93.027889, 45.012941], [-93.030205, 45.013294], [-93.030629, 45.014416], [-93.031776, 45.01516], [-93.032286, 45.015607], [-93.03194, 45.015903], [-93.031281, 45.016242], [-93.030671, 45.016766], [-93.028489, 45.017341], [-93.029079, 45.019437], [-93.025706, 45.019864], [-93.027294, 45.021279], [-93.027602, 45.021859], [-93.028008, 45.022373], [-93.028302, 45.023537], [-93.029097, 45.023471], [-93.030359, 45.024179], [-93.029554, 45.025062], [-93.030217, 45.026375], [-93.03126, 45.026981], [-93.030364, 45.029799], [-93.032025, 45.030167], [-93.032406, 45.030175], [-93.0322, 45.030856], [-93.031748, 45.031644], [-93.03232, 45.032858], [-93.029743, 45.033604], [-93.029815, 45.034658], [-93.027702, 45.036288], [-93.0263, 45.035378], [-93.025943, 45.033684], [-93.025622, 45.031789], [-93.024873, 45.032021], [-93.024379, 45.032741], [-93.022772, 45.033119], [-93.021788, 45.032783], [-93.021157, 45.03223], [-93.017605, 45.032519], [-93.016224, 45.033025], [-93.013402, 45.031829], [-93.01119, 45.031653], [-93.01077, 45.032538], [-93.010336, 45.033047], [-93.009851, 45.034901], [-93.007994, 45.035581], [-93.005658, 45.035661], [-93.004533, 45.035572], [-93.002982, 45.036141], [-93.001036, 45.036346], [-93.000267, 45.03716], [-92.998096, 45.038054], [-92.996288, 45.039504], [-92.996324, 45.040036], [-92.995239, 45.041315], [-92.994292, 45.044434], [-92.993428, 45.045099], [-92.992685, 45.045523], [-92.993941, 45.045954], [-92.995019, 45.046898], [-92.996678, 45.047975], [-92.995529, 45.048632], [-92.994894, 45.049558], [-92.993564, 45.050584], [-92.991463, 45.050305], [-92.990913, 45.050147], [-92.989704, 45.049861], [-92.988957, 45.048568], [-92.987572, 45.048094], [-92.988003, 45.047583], [-92.989156, 45.046925], [-92.989054, 45.045423], [-92.989749, 45.044602], [-92.989353, 45.039199], [-92.988922, 45.038918], [-92.989095, 45.038771], [-92.991664, 45.038093], [-92.99246, 45.036834], [-92.993813, 45.035626], [-92.993457, 45.034662], [-92.992063, 45.03385], [-92.991988, 45.033396], [-92.993936, 45.032882], [-92.995826, 45.031915], [-92.996018, 45.031162], [-92.995301, 45.030256], [-92.99576, 45.028457], [-92.995008, 45.027034], [-92.994565, 45.026475], [-92.993626, 45.024614], [-92.995175, 45.023822], [-92.994377, 45.023007], [-92.993673, 45.022114], [-92.992117, 45.022384], [-92.99068, 45.022746], [-92.989463, 45.022591], [-92.98908, 45.022622], [-92.988346, 45.022529], [-92.986211, 45.022898], [-92.984867, 45.024364], [-92.984216, 45.026253], [-92.982467, 45.025346], [-92.982309, 45.021084], [-92.981626, 45.019727], [-92.983246, 45.018395], [-92.983165, 45.017884], [-92.983407, 45.016933], [-92.982194, 45.015697], [-92.981423, 45.01423], [-92.980294, 45.013573], [-92.980431, 45.013026], [-92.979182, 45.012453], [-92.97737, 45.012222], [-92.976843, 45.013409], [-92.974682, 45.012643], [-92.975662, 45.010851], [-92.978939, 45.009987], [-92.979181, 45.009038], [-92.977167, 45.007864], [-92.976357, 45.006262], [-92.976527, 45.005596], [-92.976383, 45.004699], [-92.977253, 45.00395], [-92.978794, 45.00334], [-92.980416, 45.003547], [-92.981537, 45.003264], [-92.983643, 45.002999], [-92.984898, 45.001627], [-92.984371, 45.000631], [-92.983744, 45.000264], [-92.983425, 44.999952], [-92.984012, 44.999618], [-92.985005, 44.996917], [-92.98493, 44.995805], [-92.985013, 44.995279], [-92.986567, 44.993964], [-92.987134, 44.993134], [-92.98868, 44.993257], [-92.991361, 44.993165], [-92.993003, 44.993863], [-92.99399, 44.993828], [-92.99494, 44.993904], [-92.996622, 44.993846], [-92.997408, 44.993242], [-93.000138, 44.994857], [-93.001534, 44.994808], [-93.002847, 44.993796], [-93.003737, 44.993539], [-93.004283, 44.993116], [-93.004705, 44.992876]])
    assert actual == expected

def test_geom_to_geojson():
    geom = Polygon([[-93.004705, 44.992876], [-93.005282, 44.993016], [-93.005109, 44.994369], [-93.006721, 44.994937], [-93.009142, 44.995942], [-93.010043, 44.997435], [-93.01047, 44.998566], [-93.00983, 45.000034], [-93.012506, 45.002472], [-93.015846, 45.002357], [-93.016935, 45.00331], [-93.017277, 45.00575], [-93.018238, 45.006374], [-93.019473, 45.007456], [-93.016408, 45.009028], [-93.015893, 45.010429], [-93.014668, 45.010784], [-93.014747, 45.011952], [-93.017769, 45.011633], [-93.024573, 45.011535], [-93.027889, 45.012941], [-93.030205, 45.013294], [-93.030629, 45.014416], [-93.031776, 45.01516], [-93.032286, 45.015607], [-93.03194, 45.015903], [-93.031281, 45.016242], [-93.030671, 45.016766], [-93.028489, 45.017341], [-93.029079, 45.019437], [-93.025706, 45.019864], [-93.027294, 45.021279], [-93.027602, 45.021859], [-93.028008, 45.022373], [-93.028302, 45.023537], [-93.029097, 45.023471], [-93.030359, 45.024179], [-93.029554, 45.025062], [-93.030217, 45.026375], [-93.03126, 45.026981], [-93.030364, 45.029799], [-93.032025, 45.030167], [-93.032406, 45.030175], [-93.0322, 45.030856], [-93.031748, 45.031644], [-93.03232, 45.032858], [-93.029743, 45.033604], [-93.029815, 45.034658], [-93.027702, 45.036288], [-93.0263, 45.035378], [-93.025943, 45.033684], [-93.025622, 45.031789], [-93.024873, 45.032021], [-93.024379, 45.032741], [-93.022772, 45.033119], [-93.021788, 45.032783], [-93.021157, 45.03223], [-93.017605, 45.032519], [-93.016224, 45.033025], [-93.013402, 45.031829], [-93.01119, 45.031653], [-93.01077, 45.032538], [-93.010336, 45.033047], [-93.009851, 45.034901], [-93.007994, 45.035581], [-93.005658, 45.035661], [-93.004533, 45.035572], [-93.002982, 45.036141], [-93.001036, 45.036346], [-93.000267, 45.03716], [-92.998096, 45.038054], [-92.996288, 45.039504], [-92.996324, 45.040036], [-92.995239, 45.041315], [-92.994292, 45.044434], [-92.993428, 45.045099], [-92.992685, 45.045523], [-92.993941, 45.045954], [-92.995019, 45.046898], [-92.996678, 45.047975], [-92.995529, 45.048632], [-92.994894, 45.049558], [-92.993564, 45.050584], [-92.991463, 45.050305], [-92.990913, 45.050147], [-92.989704, 45.049861], [-92.988957, 45.048568], [-92.987572, 45.048094], [-92.988003, 45.047583], [-92.989156, 45.046925], [-92.989054, 45.045423], [-92.989749, 45.044602], [-92.989353, 45.039199], [-92.988922, 45.038918], [-92.989095, 45.038771], [-92.991664, 45.038093], [-92.99246, 45.036834], [-92.993813, 45.035626], [-92.993457, 45.034662], [-92.992063, 45.03385], [-92.991988, 45.033396], [-92.993936, 45.032882], [-92.995826, 45.031915], [-92.996018, 45.031162], [-92.995301, 45.030256], [-92.99576, 45.028457], [-92.995008, 45.027034], [-92.994565, 45.026475], [-92.993626, 45.024614], [-92.995175, 45.023822], [-92.994377, 45.023007], [-92.993673, 45.022114], [-92.992117, 45.022384], [-92.99068, 45.022746], [-92.989463, 45.022591], [-92.98908, 45.022622], [-92.988346, 45.022529], [-92.986211, 45.022898], [-92.984867, 45.024364], [-92.984216, 45.026253], [-92.982467, 45.025346], [-92.982309, 45.021084], [-92.981626, 45.019727], [-92.983246, 45.018395], [-92.983165, 45.017884], [-92.983407, 45.016933], [-92.982194, 45.015697], [-92.981423, 45.01423], [-92.980294, 45.013573], [-92.980431, 45.013026], [-92.979182, 45.012453], [-92.97737, 45.012222], [-92.976843, 45.013409], [-92.974682, 45.012643], [-92.975662, 45.010851], [-92.978939, 45.009987], [-92.979181, 45.009038], [-92.977167, 45.007864], [-92.976357, 45.006262], [-92.976527, 45.005596], [-92.976383, 45.004699], [-92.977253, 45.00395], [-92.978794, 45.00334], [-92.980416, 45.003547], [-92.981537, 45.003264], [-92.983643, 45.002999], [-92.984898, 45.001627], [-92.984371, 45.000631], [-92.983744, 45.000264], [-92.983425, 44.999952], [-92.984012, 44.999618], [-92.985005, 44.996917], [-92.98493, 44.995805], [-92.985013, 44.995279], [-92.986567, 44.993964], [-92.987134, 44.993134], [-92.98868, 44.993257], [-92.991361, 44.993165], [-92.993003, 44.993863], [-92.99399, 44.993828], [-92.99494, 44.993904], [-92.996622, 44.993846], [-92.997408, 44.993242], [-93.000138, 44.994857], [-93.001534, 44.994808], [-93.002847, 44.993796], [-93.003737, 44.993539], [-93.004283, 44.993116], [-93.004705, 44.992876]])
    actual = geom_to_geojson(geom)
    expected = {'type': 'Polygon', 'coordinates': (((-93.004705, 44.992876), (-93.005282, 44.993016), (-93.005109, 44.994369), (-93.006721, 44.994937), (-93.009142, 44.995942), (-93.010043, 44.997435), (-93.01047, 44.998566), (-93.00983, 45.000034), (-93.012506, 45.002472), (-93.015846, 45.002357), (-93.016935, 45.00331), (-93.017277, 45.00575), (-93.018238, 45.006374), (-93.019473, 45.007456), (-93.016408, 45.009028), (-93.015893, 45.010429), (-93.014668, 45.010784), (-93.014747, 45.011952), (-93.017769, 45.011633), (-93.024573, 45.011535), (-93.027889, 45.012941), (-93.030205, 45.013294), (-93.030629, 45.014416), (-93.031776, 45.01516), (-93.032286, 45.015607), (-93.03194, 45.015903), (-93.031281, 45.016242), (-93.030671, 45.016766), (-93.028489, 45.017341), (-93.029079, 45.019437), (-93.025706, 45.019864), (-93.027294, 45.021279), (-93.027602, 45.021859), (-93.028008, 45.022373), (-93.028302, 45.023537), (-93.029097, 45.023471), (-93.030359, 45.024179), (-93.029554, 45.025062), (-93.030217, 45.026375), (-93.03126, 45.026981), (-93.030364, 45.029799), (-93.032025, 45.030167), (-93.032406, 45.030175), (-93.0322, 45.030856), (-93.031748, 45.031644), (-93.03232, 45.032858), (-93.029743, 45.033604), (-93.029815, 45.034658), (-93.027702, 45.036288), (-93.0263, 45.035378), (-93.025943, 45.033684), (-93.025622, 45.031789), (-93.024873, 45.032021), (-93.024379, 45.032741), (-93.022772, 45.033119), (-93.021788, 45.032783), (-93.021157, 45.03223), (-93.017605, 45.032519), (-93.016224, 45.033025), (-93.013402, 45.031829), (-93.01119, 45.031653), (-93.01077, 45.032538), (-93.010336, 45.033047), (-93.009851, 45.034901), (-93.007994, 45.035581), (-93.005658, 45.035661), (-93.004533, 45.035572), (-93.002982, 45.036141), (-93.001036, 45.036346), (-93.000267, 45.03716), (-92.998096, 45.038054), (-92.996288, 45.039504), (-92.996324, 45.040036), (-92.995239, 45.041315), (-92.994292, 45.044434), (-92.993428, 45.045099), (-92.992685, 45.045523), (-92.993941, 45.045954), (-92.995019, 45.046898), (-92.996678, 45.047975), (-92.995529, 45.048632), (-92.994894, 45.049558), (-92.993564, 45.050584), (-92.991463, 45.050305), (-92.990913, 45.050147), (-92.989704, 45.049861), (-92.988957, 45.048568), (-92.987572, 45.048094), (-92.988003, 45.047583), (-92.989156, 45.046925), (-92.989054, 45.045423), (-92.989749, 45.044602), (-92.989353, 45.039199), (-92.988922, 45.038918), (-92.989095, 45.038771), (-92.991664, 45.038093), (-92.99246, 45.036834), (-92.993813, 45.035626), (-92.993457, 45.034662), (-92.992063, 45.03385), (-92.991988, 45.033396), (-92.993936, 45.032882), (-92.995826, 45.031915), (-92.996018, 45.031162), (-92.995301, 45.030256), (-92.99576, 45.028457), (-92.995008, 45.027034), (-92.994565, 45.026475), (-92.993626, 45.024614), (-92.995175, 45.023822), (-92.994377, 45.023007), (-92.993673, 45.022114), (-92.992117, 45.022384), (-92.99068, 45.022746), (-92.989463, 45.022591), (-92.98908, 45.022622), (-92.988346, 45.022529), (-92.986211, 45.022898), (-92.984867, 45.024364), (-92.984216, 45.026253), (-92.982467, 45.025346), (-92.982309, 45.021084), (-92.981626, 45.019727), (-92.983246, 45.018395), (-92.983165, 45.017884), (-92.983407, 45.016933), (-92.982194, 45.015697), (-92.981423, 45.01423), (-92.980294, 45.013573), (-92.980431, 45.013026), (-92.979182, 45.012453), (-92.97737, 45.012222), (-92.976843, 45.013409), (-92.974682, 45.012643), (-92.975662, 45.010851), (-92.978939, 45.009987), (-92.979181, 45.009038), (-92.977167, 45.007864), (-92.976357, 45.006262), (-92.976527, 45.005596), (-92.976383, 45.004699), (-92.977253, 45.00395), (-92.978794, 45.00334), (-92.980416, 45.003547), (-92.981537, 45.003264), (-92.983643, 45.002999), (-92.984898, 45.001627), (-92.984371, 45.000631), (-92.983744, 45.000264), (-92.983425, 44.999952), (-92.984012, 44.999618), (-92.985005, 44.996917), (-92.98493, 44.995805), (-92.985013, 44.995279), (-92.986567, 44.993964), (-92.987134, 44.993134), (-92.98868, 44.993257), (-92.991361, 44.993165), (-92.993003, 44.993863), (-92.99399, 44.993828), (-92.99494, 44.993904), (-92.996622, 44.993846), (-92.997408, 44.993242), (-93.000138, 44.994857), (-93.001534, 44.994808), (-93.002847, 44.993796), (-93.003737, 44.993539), (-93.004283, 44.993116), (-93.004705, 44.992876)),)}
    assert actual == expected


def test_transform_geom():
    actual = transform(transformToRaster, geom)
    expected = {'type': 'Polygon', 'coordinates': (((235844.98410467943, 2448644.985184901), (235799.0761856137, 2448659.1248282), (235807.94937432575, 2448810.040791248), (235679.07723293288, 2448869.217362927), (235485.00105000683, 2448974.996069575), (235408.85803237034, 2449138.8210237822), (235371.29155517815, 2449263.5571872406), (235416.52424711137, 2449428.4180801366), (235197.38469470185, 2449692.953142582), (234934.92371017853, 2449671.901008953), (234845.8894024335, 2449775.2043980053), (234810.45340385826, 2450045.7411728594), (234732.64664937905, 2450112.7694422402), (234631.68036446543, 2450230.061318986), (234867.3917143337, 2450412.472057294), (234903.02455517126, 2450569.565109441), (234998.18170948667, 2450612.076925512), (234987.88304390555, 2450741.7867690236), (234751.19444289076, 2450698.8388298163), (234216.12303680947, 2450671.151133286), (233950.29108156596, 2450819.359123822), (233766.81876403454, 2450852.920643868), (233729.55417337018, 2450976.666730689), (233636.71382387076, 2451056.5939107193), (233595.03041285858, 2451105.0554427016), (233621.22742971455, 2451138.82699818), (233671.9034158907, 2451178.150640736), (233718.08019010868, 2451237.9296756876), (233887.77078564814, 2451307.2489547776), (233834.05699624677, 2451538.9118248536), (234097.96427880554, 2451594.7062442563), (233968.0938608124, 2451748.169344456), (233941.84223891897, 2451811.917538474), (233908.11018272795, 2451868.084147402), (233880.92923992337, 2451996.817908649), (233818.61045428805, 2451987.52128194), (233716.85839510075, 2452063.1589259305), (233777.12233867787, 2452163.3437939174), (233720.3957004906, 2452307.740955753), (233636.2327338112, 2452372.57367439), (233696.92722067103, 2452688.184355981), (233564.97792419748, 2452725.028389485), (233534.97705981304, 2452724.9817856653), (233548.81697437138, 2452801.226000992), (233581.6370532546, 2452889.9747981327), (233532.42149215957, 2453023.5844733543), (233732.5505931887, 2453112.886284619), (233723.2218642236, 2453229.929583823), (233883.76756190477, 2453416.407505166), (233997.2197954143, 2453318.653817743), (234031.2003753411, 2453131.1354783443), (234063.0502516469, 2452921.1736092134), (234121.1641115679, 2452948.8205221216), (234157.51759237124, 2453030.1124583744), (234282.61679878336, 2453076.1123119434), (234361.19536605687, 2453041.170367614), (234412.76212491764, 2452981.2248054594), (234691.17735727367, 2453022.1326111676), (234798.04811451703, 2453081.818485233), (235024.2242271195, 2452955.7813883377), (235198.8514734994, 2452941.6800634502), (235228.7947561813, 2453041.144536089), (235261.1544304606, 2453098.8270017216), (235292.817429282, 2453306.2186724334), (235436.51348404956, 2453386.4431564864), (235619.98862331195, 2453401.1297325846), (235708.79585307586, 2453394.0215201783), (235828.80495300927, 2453461.1498191734), (235981.1609307997, 2453488.7791651958), (236038.7931133222, 2453581.2163348543), (236206.42327270372, 2453686.03466344), (236343.5407864079, 2453851.787699809), (236338.83849060527, 2453910.862989377), (236419.68247536823, 2454055.801649238), (236483.19481328546, 2454405.0255817412), (236548.8094533205, 2454481.1309703873), (236605.75447903055, 2454530.133854062), (236505.45278941595, 2454574.9391082786), (236417.34737661644, 2454677.239303839), (236283.0823223583, 2454792.8865281492), (236371.13781876012, 2454868.808690373), (236417.82112140267, 2454973.368311205), (236518.8091814318, 2455090.7784293233), (236685.02397245495, 2455064.9818963534), (236728.83518468658, 2455048.7807846167), (236824.92482460442, 2455019.987212509), (236888.23037535945, 2454878.0553501765), (236998.82769776764, 2454828.795220753), (236966.73241535499, 2454770.892323759), (236878.37045660036, 2454694.8417818327), (236891.68666818133, 2454528.05844177), (236839.91764877463, 2454435.0224232455), (236890.1056740381, 2453835.1350191254), (236924.99767034233, 2453804.958887252), (236911.9079436406, 2453788.1794272475), (236712.22240773708, 2453706.375897073), (236654.04233732694, 2453564.3768773037), (236551.86562533048, 2453426.6631717063), (236583.262222316, 2453320.3398588332), (236695.77795824214, 2453233.5057510696), (236703.2764518808, 2453183.2016140735), (236551.8464508162, 2453121.1873643743), (236406.5697686129, 2453008.940425567), (236394.1138266754, 2452924.7185105863), (236453.70516239436, 2452825.741997627), (236423.92335437879, 2452624.5246452135), (236488.08948220627, 2452468.136509534), (236524.90802486351, 2452407.069566208), (236605.33154711672, 2452202.434550881), (236486.24998294553, 2452110.4958208576), (236551.9010515397, 2452021.8405979592), (236610.43243465284, 2451924.2768403618), (236731.90447295725, 2451958.180376972), (236843.688767912, 2452002.0211906554), (236939.98503707888, 2451987.816308903), (236970.00914562063, 2451992.2189836693), (237028.08608197363, 2451983.706357447), (237194.76010660466, 2452030.0720451344), (237295.32707547426, 2452196.4697842672), (237339.87541250477, 2452408.181411959), (237480.67812801327, 2452311.6784961442), (237508.1651508204, 2451838.0711902096), (237566.69782200948, 2451688.857410157), (237443.93977617848, 2451536.6677046707), (237452.1177588019, 2451480.0380700985), (237436.43503907806, 2451373.665624717), (237536.2450519015, 2451239.2317861547), (237602.09542231204, 2451078.002310089), (237693.25542341854, 2451007.755167012), (237684.40888829244, 2450946.576037934), (237784.71682575034, 2450885.9723022687), (237928.1183570147, 2450864.8160199337), (237965.38641831794, 2450998.1518098614), (238138.14334560477, 2450918.3717348175), (238067.37340677294, 2450716.6125818295), (237812.55993087057, 2450612.314503592), (237796.87269433407, 2450506.161762451), (237959.5146390614, 2450380.631197566), (238028.92771919872, 2450204.485391801), (238017.90680978014, 2450129.986948133), (238032.4143741359, 2450030.582911466), (237966.5978295789, 2449945.099841037), (237847.48064255028, 2449873.3973620646), (237719.09827755293, 2449892.3616846753), (237631.87643471523, 2449858.082541546), (237467.07073619944, 2449823.3446760527), (237373.14521213205, 2449667.613511021), (237418.13736981442, 2449558.1530958456), (237468.7799901385, 2449518.9012306067), (237494.98818229773, 2449484.9971300093), (237449.9685190353, 2449446.3821378653), (237381.3494405212, 2449143.4893978634), (237391.1777270958, 2449019.9967435333), (237386.50160486283, 2448961.285991672), (237268.8269822089, 2448811.1462575165), (237227.1257298966, 2448717.414982034), (237105.003852918, 2448727.237311333), (236894.30217407367, 2448710.3186574625), (236762.60020157916, 2448783.8610685975), (236685.03566062087, 2448777.5096521517), (236609.9928023638, 2448783.597029577), (236477.80489017456, 2448772.9594246275), (236418.061241192, 2448703.8243942335), (236197.50588513314, 2448876.663006159), (236087.79875493216, 2448867.744187934), (235988.00347397168, 2448751.9241489987), (235918.85195535448, 2448721.129738812), (235877.35899173564, 2448672.7264482537), (235844.98410467943, 2448644.985184901)),)}
    assert geom_to_geojson(actual) == expected

def test_get_local_flowlines():
    actual1, actual2 = get_local_flowlines(1100118)
    expected = type(flowlines), type(nhdFlowline)
    assert type(actual1), type(actual2) == expected 

def test_get_total_basin():
    actual = get_total_basin('1100118')
    features = [{'type': 'Feature', 'geometry': {'type': 'Polygon', 'coordinates': [[[-93.004704792, 44.992876129], [-93.005282152, 44.993016497], [-93.00510877, 44.994368628], [-93.006721202, 44.994936666], [-93.009142012, 44.995942036], [-93.010043377, 44.997435072], [-93.010469552, 44.998565616], [-93.009829522, 45.000033813], [-93.012505506, 45.002472481], [-93.015846018, 45.002357118], [-93.0169354, 45.003309576], [-93.017276805, 45.005750005], [-93.018237877, 45.006374033], [-93.019473498, 45.007456162], [-93.016407637, 45.009027541], [-93.015892715, 45.01042904], [-93.014667715, 45.010784285], [-93.014746884, 45.01195244], [-93.017769291, 45.01163291], [-93.024573364, 45.011535195], [-93.027888706, 45.012941487], [-93.030205274, 45.013294087], [-93.030629286, 45.014416123], [-93.031775934, 45.015160067], [-93.032286408, 45.015606511], [-93.031939697, 45.015903355], [-93.031281371, 45.016241778], [-93.030671438, 45.016765659], [-93.028489456, 45.01734116], [-93.029078917, 45.019437299], [-93.025705935, 45.019864181], [-93.027293622, 45.021278593], [-93.027601601, 45.021858609], [-93.028007796, 45.022373363], [-93.028301903, 45.023536809], [-93.029097205, 45.023471164], [-93.030358803, 45.024178691], [-93.029554174, 45.025061793], [-93.030217083, 45.026374591], [-93.031259763, 45.026981386], [-93.030363664, 45.029799161], [-93.032024731, 45.030166739], [-93.032405701, 45.030175157], [-93.03219988, 45.030855511], [-93.031747945, 45.031644225], [-93.032319991, 45.032858083], [-93.029742649, 45.033604031], [-93.029815226, 45.034658287], [-93.027702224, 45.036287994], [-93.026300403, 45.035378171], [-93.025943347, 45.033684335], [-93.025622044, 45.031788985], [-93.024872898, 45.032021066], [-93.024379206, 45.032741398], [-93.022771506, 45.033118822], [-93.021788298, 45.03278302], [-93.021157373, 45.032229532], [-93.017605048, 45.032519495], [-93.016224009, 45.033025157], [-93.013402085, 45.031828649], [-93.011190297, 45.031653003], [-93.010769565, 45.032538236], [-93.010335778, 45.033047005], [-93.00985105, 45.034901283], [-93.007994384, 45.035580677], [-93.005657839, 45.035661375], [-93.004532589, 45.035572008], [-93.002981697, 45.036141192], [-93.001035841, 45.036346437], [-93.000266573, 45.037159591], [-92.998096208, 45.038054185], [-92.996288332, 45.039503739], [-92.996324149, 45.04003562], [-92.995238944, 45.041314815], [-92.994291905, 45.044433768], [-92.993427746, 45.045099362], [-92.992684651, 45.045523194], [-92.993940804, 45.045953841], [-92.995019051, 45.046897887], [-92.996678449, 45.047975047], [-92.99552856, 45.048632165], [-92.994894113, 45.049557922], [-92.993563758, 45.05058402], [-92.991463297, 45.050305169], [-92.990913071, 45.050147427], [-92.989704032, 45.049861116], [-92.988957334, 45.048568283], [-92.987572013, 45.048093594], [-92.988003187, 45.047582708], [-92.989156156, 45.04692467], [-92.989053597, 45.045422887], [-92.989748955, 45.044601797], [-92.989353357, 45.039198848], [-92.988921954, 45.038918369], [-92.98909544, 45.03877052], [-92.991664463, 45.038092581], [-92.992459729, 45.036834328], [-92.993812859, 45.035626497], [-92.993456769, 45.034661749], [-92.99206297, 45.033849737], [-92.991987938, 45.033396012], [-92.993935628, 45.032882204], [-92.99582609, 45.031915046], [-92.996017672, 45.031161714], [-92.995301407, 45.030256362], [-92.995760199, 45.028457415], [-92.995007554, 45.027033887], [-92.994564824, 45.026475003], [-92.993626231, 45.024614242], [-92.995175011, 45.023821757], [-92.994377317, 45.023007316], [-92.993672547, 45.022113819], [-92.992117396, 45.022383511], [-92.990680195, 45.022746446], [-92.989462827, 45.022590611], [-92.989080113, 45.022622071], [-92.98834552, 45.022528679], [-92.986210927, 45.022898053], [-92.984867179, 45.024364135], [-92.984216425, 45.026252502], [-92.982466682, 45.025346004], [-92.982309488, 45.021084495], [-92.981625746, 45.019726731], [-92.983246405, 45.018395468], [-92.983165122, 45.01788366], [-92.983407347, 45.016933415], [-92.982193958, 45.015696531], [-92.981422805, 45.014230396], [-92.980293681, 45.013572806], [-92.980431436, 45.013025888], [-92.979182371, 45.012453047], [-92.977369936, 45.012221545], [-92.976842957, 45.013408758], [-92.974682254, 45.012642543], [-92.975662365, 45.01085126], [-92.978938757, 45.009987257], [-92.979180967, 45.00903809], [-92.977166776, 45.00786429], [-92.976357254, 45.006262418], [-92.9765272, 45.005596122], [-92.976382888, 45.004699376], [-92.977253457, 45.003949815], [-92.97879377, 45.003339653], [-92.980416461, 45.003546849], [-92.981537001, 45.003264382], [-92.983642519, 45.00299877], [-92.984898271, 45.001626688], [-92.984371168, 45.000630751], [-92.983744394, 45.000263703], [-92.983424849, 44.999952022], [-92.984011622, 44.999617506], [-92.98500526, 44.996917242], [-92.984930073, 44.995805031], [-92.985013217, 44.995279032], [-92.986566975, 44.99396423], [-92.987134205, 44.993134067], [-92.988680038, 44.993257255], [-92.991361085, 44.993164595], [-92.993003278, 44.993863061], [-92.993990441, 44.993828274], [-92.994939894, 44.993904319], [-92.9966219, 44.993846082], [-92.997408181, 44.993242038], [-93.000138068, 44.994857151], [-93.001533814, 44.994808259], [-93.00284746, 44.993795568], [-93.003737286, 44.993539385], [-93.004283175, 44.993116426], [-93.004704792, 44.992876129]]]}, 'properties': {}}]
    expected = GeometryCollection([shape(feature["geometry"]).buffer(0) for feature in features])
    assert actual == expected

def test_get_upstream_basin():   # Expand on this
    features = [{'type': 'Feature', 'geometry': {'type': 'Polygon', 'coordinates': [[[-93.004704792, 44.992876129], [-93.005282152, 44.993016497], [-93.00510877, 44.994368628], [-93.006721202, 44.994936666], [-93.009142012, 44.995942036], [-93.010043377, 44.997435072], [-93.010469552, 44.998565616], [-93.009829522, 45.000033813], [-93.012505506, 45.002472481], [-93.015846018, 45.002357118], [-93.0169354, 45.003309576], [-93.017276805, 45.005750005], [-93.018237877, 45.006374033], [-93.019473498, 45.007456162], [-93.016407637, 45.009027541], [-93.015892715, 45.01042904], [-93.014667715, 45.010784285], [-93.014746884, 45.01195244], [-93.017769291, 45.01163291], [-93.024573364, 45.011535195], [-93.027888706, 45.012941487], [-93.030205274, 45.013294087], [-93.030629286, 45.014416123], [-93.031775934, 45.015160067], [-93.032286408, 45.015606511], [-93.031939697, 45.015903355], [-93.031281371, 45.016241778], [-93.030671438, 45.016765659], [-93.028489456, 45.01734116], [-93.029078917, 45.019437299], [-93.025705935, 45.019864181], [-93.027293622, 45.021278593], [-93.027601601, 45.021858609], [-93.028007796, 45.022373363], [-93.028301903, 45.023536809], [-93.029097205, 45.023471164], [-93.030358803, 45.024178691], [-93.029554174, 45.025061793], [-93.030217083, 45.026374591], [-93.031259763, 45.026981386], [-93.030363664, 45.029799161], [-93.032024731, 45.030166739], [-93.032405701, 45.030175157], [-93.03219988, 45.030855511], [-93.031747945, 45.031644225], [-93.032319991, 45.032858083], [-93.029742649, 45.033604031], [-93.029815226, 45.034658287], [-93.027702224, 45.036287994], [-93.026300403, 45.035378171], [-93.025943347, 45.033684335], [-93.025622044, 45.031788985], [-93.024872898, 45.032021066], [-93.024379206, 45.032741398], [-93.022771506, 45.033118822], [-93.021788298, 45.03278302], [-93.021157373, 45.032229532], [-93.017605048, 45.032519495], [-93.016224009, 45.033025157], [-93.013402085, 45.031828649], [-93.011190297, 45.031653003], [-93.010769565, 45.032538236], [-93.010335778, 45.033047005], [-93.00985105, 45.034901283], [-93.007994384, 45.035580677], [-93.005657839, 45.035661375], [-93.004532589, 45.035572008], [-93.002981697, 45.036141192], [-93.001035841, 45.036346437], [-93.000266573, 45.037159591], [-92.998096208, 45.038054185], [-92.996288332, 45.039503739], [-92.996324149, 45.04003562], [-92.995238944, 45.041314815], [-92.994291905, 45.044433768], [-92.993427746, 45.045099362], [-92.992684651, 45.045523194], [-92.993940804, 45.045953841], [-92.995019051, 45.046897887], [-92.996678449, 45.047975047], [-92.99552856, 45.048632165], [-92.994894113, 45.049557922], [-92.993563758, 45.05058402], [-92.991463297, 45.050305169], [-92.990913071, 45.050147427], [-92.989704032, 45.049861116], [-92.988957334, 45.048568283], [-92.987572013, 45.048093594], [-92.988003187, 45.047582708], [-92.989156156, 45.04692467], [-92.989053597, 45.045422887], [-92.989748955, 45.044601797], [-92.989353357, 45.039198848], [-92.988921954, 45.038918369], [-92.98909544, 45.03877052], [-92.991664463, 45.038092581], [-92.992459729, 45.036834328], [-92.993812859, 45.035626497], [-92.993456769, 45.034661749], [-92.99206297, 45.033849737], [-92.991987938, 45.033396012], [-92.993935628, 45.032882204], [-92.99582609, 45.031915046], [-92.996017672, 45.031161714], [-92.995301407, 45.030256362], [-92.995760199, 45.028457415], [-92.995007554, 45.027033887], [-92.994564824, 45.026475003], [-92.993626231, 45.024614242], [-92.995175011, 45.023821757], [-92.994377317, 45.023007316], [-92.993672547, 45.022113819], [-92.992117396, 45.022383511], [-92.990680195, 45.022746446], [-92.989462827, 45.022590611], [-92.989080113, 45.022622071], [-92.98834552, 45.022528679], [-92.986210927, 45.022898053], [-92.984867179, 45.024364135], [-92.984216425, 45.026252502], [-92.982466682, 45.025346004], [-92.982309488, 45.021084495], [-92.981625746, 45.019726731], [-92.983246405, 45.018395468], [-92.983165122, 45.01788366], [-92.983407347, 45.016933415], [-92.982193958, 45.015696531], [-92.981422805, 45.014230396], [-92.980293681, 45.013572806], [-92.980431436, 45.013025888], [-92.979182371, 45.012453047], [-92.977369936, 45.012221545], [-92.976842957, 45.013408758], [-92.974682254, 45.012642543], [-92.975662365, 45.01085126], [-92.978938757, 45.009987257], [-92.979180967, 45.00903809], [-92.977166776, 45.00786429], [-92.976357254, 45.006262418], [-92.9765272, 45.005596122], [-92.976382888, 45.004699376], [-92.977253457, 45.003949815], [-92.97879377, 45.003339653], [-92.980416461, 45.003546849], [-92.981537001, 45.003264382], [-92.983642519, 45.00299877], [-92.984898271, 45.001626688], [-92.984371168, 45.000630751], [-92.983744394, 45.000263703], [-92.983424849, 44.999952022], [-92.984011622, 44.999617506], [-92.98500526, 44.996917242], [-92.984930073, 44.995805031], [-92.985013217, 44.995279032], [-92.986566975, 44.99396423], [-92.987134205, 44.993134067], [-92.988680038, 44.993257255], [-92.991361085, 44.993164595], [-92.993003278, 44.993863061], [-92.993990441, 44.993828274], [-92.994939894, 44.993904319], [-92.9966219, 44.993846082], [-92.997408181, 44.993242038], [-93.000138068, 44.994857151], [-93.001533814, 44.994808259], [-93.00284746, 44.993795568], [-93.003737286, 44.993539385], [-93.004283175, 44.993116426], [-93.004704792, 44.992876129]]]}, 'properties': {}}]
    totalBasinGeom = GeometryCollection([shape(feature["geometry"]).buffer(0) for feature in features])
    actual = type(get_upstream_basin(geom, totalBasinGeom))
    expected = shapely.geometry.polygon.Polygon
    assert actual == expected

def test_project_point():
    actual = project_point(-93, 45, transformToRaster)
    expected = projected_xy
    assert actual == expected

def test_get_flowgrid():
    actual1, actual2 = get_flowgrid(geom, transformToRaster)
    actual1 = type(actual1)
    expected = pyflwdir.pyflwdir.FlwdirRaster, Affine(30.0, 0.0, 233414.99999999907, 0.0, -30.0, 2455185.000000002)
    assert actual1, actual2 == expected

def test_split_catchment():
    actual = split_catchment(geom, projected_xy, transformToRaster, transformToWGS84) 
    expected = transform(transformToWGS84, shape(splitpoly[0]))
    assert actual == expected

def test_merge_geometry():
    catchmentIdentifier, catchmentGeom = get_local_catchment(-93.0475902557373, 45.02640448441474)
    projected_xy = project_point(-93.0475902557373, 45.02640448441474, transformToRaster)
    split_geom = split_catchment(catchmentGeom, projected_xy, transformToRaster, transformToWGS84)
    totalBasinGeom = get_total_basin(catchmentIdentifier)
    upstreamBasin = get_upstream_basin(catchmentGeom, totalBasinGeom)
    actual = merge_geometry(catchmentGeom, split_geom, upstreamBasin)
    expected = {'type': 'Polygon', 'coordinates': (((-93.06218252045223, 45.04777644810753), (-93.06131262624174, 45.050621319908586), (-93.04712616258529, 45.0506325859609), (-93.0447164987195, 45.05269514693728), (-93.04203144687483, 45.05259595439661), (-93.04121767112596, 45.050600513278404), (-93.03201464410175, 45.05105086978059), (-93.03002530476424, 45.05330918957902), (-93.02457297338593, 45.054799275744095), (-93.02091956573273, 45.05659191024023), (-93.02023679023783, 45.05775038820873), (-93.01903103493608, 45.0576585856802), (-93.01771398755179, 45.05617164692764), (-93.01361832484693, 45.05644767203417), (-93.01108171163689, 45.05758284628268), (-93.00789425032855, 45.05750229596052), (-93.00662349823095, 45.059101671360935), (-93.00039984026458, 45.06141550651319), (-92.99485932797673, 45.06096687421507), (-92.99413155883946, 45.05830128032913), (-92.99214152351628, 45.0576139174182), (-92.99098656793048, 45.05343731858919), (-92.99164204333425, 45.05210029514708), (-92.99124006585195, 45.0505225859013), (-92.98954150487856, 45.05000694517308), (-92.9878463522298, 45.04797924810446), (-92.98947420846714, 45.044543584816154), (-92.98919045362423, 45.03886851824503), (-92.99150004119507, 45.03786029594634), (-92.99348714909604, 45.03557362725419), (-92.99243946966618, 45.03313104092993), (-92.99554553039468, 45.031745751784456), (-92.99547318557896, 45.02849355056182), (-92.99363752167758, 45.02502766788068), (-92.99475684909787, 45.02376918466716), (-92.99355928369489, 45.02240035856115), (-92.9883579535995, 45.022800540022295), (-92.9863596072448, 45.02314633764574), (-92.98426052666483, 45.026132833547535), (-92.98246841142183, 45.025551018294834), (-92.9815043807552, 45.01992069624533), (-92.98297234579911, 45.01827673534148), (-92.983117394145, 45.01701273978835), (-92.98019439418155, 45.01322081377553), (-92.97749875779219, 45.01251970455844), (-92.9763163287368, 45.01344505742516), (-92.97479273451899, 45.01248134445565), (-92.97556729247637, 45.01068994268591), (-92.9787160778045, 45.009767911062), (-92.97886968976083, 45.0091659400462), (-92.97690430541583, 45.007859610010996), (-92.97632431258454, 45.00458269505786), (-92.97868106722345, 45.003113113283085), (-92.98351295104183, 45.00274042561133), (-92.9845627451997, 45.00159338091803), (-92.9835368462165, 44.99986212318607), (-92.9847414097735, 44.995331829169565), (-92.98707520758519, 44.992991460944765), (-92.99494335392774, 44.99363249690909), (-92.99750638065352, 44.99309942539976), (-93.00018385727238, 44.994571655674086), (-93.00491194493029, 44.99291677269885), (-93.00537822850532, 44.99418175535275), (-93.00943112310556, 44.99593627619269), (-93.0106486496706, 44.99839088707273), (-93.01015000181822, 44.99996057262615), (-93.01260812892997, 45.00220070407961), (-93.01595568749194, 45.002214021707736), (-93.01714823363119, 45.00326725554088), (-93.01752786703429, 45.00559784322538), (-93.01905944387721, 45.00726947647991), (-93.01494901298315, 45.010941850251655), (-93.01499790638759, 45.01166328256564), (-93.02466457657314, 45.01129443364681), (-93.03016505088313, 45.01305279415161), (-93.032365724001, 45.015308874573975), (-93.03441412970845, 45.014842570584335), (-93.03582950395105, 45.01552397437642), (-93.03683996359216, 45.021080990658824), (-93.04032109039196, 45.02093576567143), (-93.04075019179558, 45.022794060944825), (-93.04262663716638, 45.02449163383946), (-93.04452200534944, 45.02836473167571), (-93.04626202905816, 45.0293449358105), (-93.0507507347983, 45.03019066939831), (-93.05119790931353, 45.03365164991963), (-93.0533716488573, 45.034504910639974), (-93.05393666876176, 45.035851192742136), (-93.0576867201772, 45.03631878444909), (-93.05823738305881, 45.03812815478673), (-93.0613764551545, 45.03815916396434), (-93.05969836922334, 45.042516761683686), (-93.06204349125606, 45.04336111072632), (-93.06218252045223, 45.04777644810753)),)}
    assert geom_to_geojson(actual) == expected

def test_get_onFlowlines():
    actual = get_onFlowline(projected_xy, flowlines, transformToRaster)
    expected = False
    assert actual == expected

def test_get_raindropPath():
    actual = get_raindropPath(flw, projected_xy, nhdFlowline, flowlines, transformToRaster, transformToWGS84)
    expected = LineString([(-93.00000748145598, 44.999919001788165), (-93.00038827660947, 44.99992751036108), (-93.00076907185931, 44.99993601785441), (-93.00114986720548, 44.999944524268265), (-93.00153066264802, 44.99995302960253), (-93.00191145818685, 44.99996153385728), (-93.00228023804749, 45.000239497885254), (-93.00266103530326, 45.00024800002032), (-93.0030418326553, 45.00025650107584), (-93.00342263010361, 45.000265001051794), (-93.0038034276482, 45.00027349994815), (-93.004184225289, 45.00028199776498), (-93.00456502302606, 45.000290494502195), (-93.00455301630132, 45.00055995576119), (-93.00454100948035, 45.00082941718957), (-93.00452900256317, 45.00109887878746), (-93.00451699554976, 45.00136834055483), (-93.00450498844013, 45.00163780249167), (-93.00487378821379, 45.00191576049221), (-93.00525459528954, 45.00192425530687), (-93.00563540246148, 45.00193274904191), (-93.00562339973264, 45.002202211435986), (-93.00599220722462, 45.002480166733925), (-93.00598020582784, 45.00274962950647), (-93.00634901779698, 45.00302758418206), (-93.0063370177323, 45.00329704733309), (-93.00670583417869, 45.00357500138634), (-93.00669383544616, 45.00384446491591), (-93.00668183661747, 45.00411392861508), (-93.00666983769264, 45.00438339248376), (-93.00665783867161, 45.004652856522036), (-93.00664583955444, 45.004922320729946), (-93.0066338403411, 45.00519178510745), (-93.00624101375261, 45.00545275864611), (-93.005848184115, 45.00571373119592), (-93.00583618156395, 45.00598319600344), (-93.00544334725635, 45.00624416769459), (-93.00543134298829, 45.00651363280203), (-93.00580017333361, 45.00679159144398), (-93.00616900672823, 45.007069549254716), (-93.00653784317213, 45.00734750623426), (-93.00652584309321, 45.00761697213857), (-93.00651384291812, 45.007886438212566), (-93.00650184264686, 45.0081559044563), (-93.00648984227941, 45.008425370869745), (-93.00647784181577, 45.00869483745284), (-93.00646584125595, 45.008964304205705), (-93.00683468932036, 45.00924226160879), (-93.00682269009292, 45.00951172874047), (-93.0068106907693, 45.00978119604197), (-93.00679869134952, 45.010050663513205), (-93.00678669183354, 45.010320131154245), (-93.0067746922214, 45.01058959896501), (-93.00676269251308, 45.01085906694556), (-93.00675069270858, 45.011128535095885), (-93.00711955382286, 45.01140649313206), (-93.00748841798685, 45.01168445033706), (-93.00747642094352, 45.01195391907567), (-93.00746442380404, 45.0122233879841), (-93.00745242656839, 45.01249285706234), (-93.00782129806828, 45.01277081406387), (-93.008190172618, 45.01304877023426), (-93.00817817814372, 45.01331823990086), (-93.00816618357328, 45.013587709737344), (-93.00815418890673, 45.0138571797437), (-93.00853506403047, 45.01386566549513), (-93.008142194144, 45.014126649919945), (-93.0077493212076, 45.01438763335604), (-93.00735644522122, 45.01464861580347), (-93.00734444712005, 45.014918086410624), (-93.00733244892271, 45.015187557187716), (-93.0073204506292, 45.01545702813471), (-93.0073084522395, 45.015726499251635), (-93.00729645375364, 45.01599597053852), (-93.00766534382817, 45.01627393026104), (-93.00804623258092, 45.01628241744689), (-93.00842712142982, 45.016290903552864), (-93.008717, 45.016322)])
    assert actual == expected

def test_get_intersectionPoint():
    raindropPath = LineString([(-93.00000748145598, 44.999919001788165), (-93.00038827660947, 44.99992751036108), (-93.00076907185931, 44.99993601785441), (-93.00114986720548, 44.999944524268265), (-93.00153066264802, 44.99995302960253), (-93.00191145818685, 44.99996153385728), (-93.00228023804749, 45.000239497885254), (-93.00266103530326, 45.00024800002032), (-93.0030418326553, 45.00025650107584), (-93.00342263010361, 45.000265001051794), (-93.0038034276482, 45.00027349994815), (-93.004184225289, 45.00028199776498), (-93.00456502302606, 45.000290494502195), (-93.00455301630132, 45.00055995576119), (-93.00454100948035, 45.00082941718957), (-93.00452900256317, 45.00109887878746), (-93.00451699554976, 45.00136834055483), (-93.00450498844013, 45.00163780249167), (-93.00487378821379, 45.00191576049221), (-93.00525459528954, 45.00192425530687), (-93.00563540246148, 45.00193274904191), (-93.00562339973264, 45.002202211435986), (-93.00599220722462, 45.002480166733925), (-93.00598020582784, 45.00274962950647), (-93.00634901779698, 45.00302758418206), (-93.0063370177323, 45.00329704733309), (-93.00670583417869, 45.00357500138634), (-93.00669383544616, 45.00384446491591), (-93.00668183661747, 45.00411392861508), (-93.00666983769264, 45.00438339248376), (-93.00665783867161, 45.004652856522036), (-93.00664583955444, 45.004922320729946), (-93.0066338403411, 45.00519178510745), (-93.00624101375261, 45.00545275864611), (-93.005848184115, 45.00571373119592), (-93.00583618156395, 45.00598319600344), (-93.00544334725635, 45.00624416769459), (-93.00543134298829, 45.00651363280203), (-93.00580017333361, 45.00679159144398), (-93.00616900672823, 45.007069549254716), (-93.00653784317213, 45.00734750623426), (-93.00652584309321, 45.00761697213857), (-93.00651384291812, 45.007886438212566), (-93.00650184264686, 45.0081559044563), (-93.00648984227941, 45.008425370869745), (-93.00647784181577, 45.00869483745284), (-93.00646584125595, 45.008964304205705), (-93.00683468932036, 45.00924226160879), (-93.00682269009292, 45.00951172874047), (-93.0068106907693, 45.00978119604197), (-93.00679869134952, 45.010050663513205), (-93.00678669183354, 45.010320131154245), (-93.0067746922214, 45.01058959896501), (-93.00676269251308, 45.01085906694556), (-93.00675069270858, 45.011128535095885), (-93.00711955382286, 45.01140649313206), (-93.00748841798685, 45.01168445033706), (-93.00747642094352, 45.01195391907567), (-93.00746442380404, 45.0122233879841), (-93.00745242656839, 45.01249285706234), (-93.00782129806828, 45.01277081406387), (-93.008190172618, 45.01304877023426), (-93.00817817814372, 45.01331823990086), (-93.00816618357328, 45.013587709737344), (-93.00815418890673, 45.0138571797437), (-93.00853506403047, 45.01386566549513), (-93.008142194144, 45.014126649919945), (-93.0077493212076, 45.01438763335604), (-93.00735644522122, 45.01464861580347), (-93.00734444712005, 45.014918086410624), (-93.00733244892271, 45.015187557187716), (-93.0073204506292, 45.01545702813471), (-93.0073084522395, 45.015726499251635), (-93.00729645375364, 45.01599597053852), (-93.00766534382817, 45.01627393026104), (-93.00804623258092, 45.01628241744689), (-93.00842712142982, 45.016290903552864), (-93.008717, 45.016322)])
    actual = get_intersectionPoint(-93, 45, False, raindropPath)
    expected = Point((-93.008717, 45.016322))
    assert actual == expected

def test_get_reachMeasure():
    raindropPath = LineString([(-93.00000748145598, 44.999919001788165), (-93.00038827660947, 44.99992751036108), (-93.00076907185931, 44.99993601785441), (-93.00114986720548, 44.999944524268265), (-93.00153066264802, 44.99995302960253), (-93.00191145818685, 44.99996153385728), (-93.00228023804749, 45.000239497885254), (-93.00266103530326, 45.00024800002032), (-93.0030418326553, 45.00025650107584), (-93.00342263010361, 45.000265001051794), (-93.0038034276482, 45.00027349994815), (-93.004184225289, 45.00028199776498), (-93.00456502302606, 45.000290494502195), (-93.00455301630132, 45.00055995576119), (-93.00454100948035, 45.00082941718957), (-93.00452900256317, 45.00109887878746), (-93.00451699554976, 45.00136834055483), (-93.00450498844013, 45.00163780249167), (-93.00487378821379, 45.00191576049221), (-93.00525459528954, 45.00192425530687), (-93.00563540246148, 45.00193274904191), (-93.00562339973264, 45.002202211435986), (-93.00599220722462, 45.002480166733925), (-93.00598020582784, 45.00274962950647), (-93.00634901779698, 45.00302758418206), (-93.0063370177323, 45.00329704733309), (-93.00670583417869, 45.00357500138634), (-93.00669383544616, 45.00384446491591), (-93.00668183661747, 45.00411392861508), (-93.00666983769264, 45.00438339248376), (-93.00665783867161, 45.004652856522036), (-93.00664583955444, 45.004922320729946), (-93.0066338403411, 45.00519178510745), (-93.00624101375261, 45.00545275864611), (-93.005848184115, 45.00571373119592), (-93.00583618156395, 45.00598319600344), (-93.00544334725635, 45.00624416769459), (-93.00543134298829, 45.00651363280203), (-93.00580017333361, 45.00679159144398), (-93.00616900672823, 45.007069549254716), (-93.00653784317213, 45.00734750623426), (-93.00652584309321, 45.00761697213857), (-93.00651384291812, 45.007886438212566), (-93.00650184264686, 45.0081559044563), (-93.00648984227941, 45.008425370869745), (-93.00647784181577, 45.00869483745284), (-93.00646584125595, 45.008964304205705), (-93.00683468932036, 45.00924226160879), (-93.00682269009292, 45.00951172874047), (-93.0068106907693, 45.00978119604197), (-93.00679869134952, 45.010050663513205), (-93.00678669183354, 45.010320131154245), (-93.0067746922214, 45.01058959896501), (-93.00676269251308, 45.01085906694556), (-93.00675069270858, 45.011128535095885), (-93.00711955382286, 45.01140649313206), (-93.00748841798685, 45.01168445033706), (-93.00747642094352, 45.01195391907567), (-93.00746442380404, 45.0122233879841), (-93.00745242656839, 45.01249285706234), (-93.00782129806828, 45.01277081406387), (-93.008190172618, 45.01304877023426), (-93.00817817814372, 45.01331823990086), (-93.00816618357328, 45.013587709737344), (-93.00815418890673, 45.0138571797437), (-93.00853506403047, 45.01386566549513), (-93.008142194144, 45.014126649919945), (-93.0077493212076, 45.01438763335604), (-93.00735644522122, 45.01464861580347), (-93.00734444712005, 45.014918086410624), (-93.00733244892271, 45.015187557187716), (-93.0073204506292, 45.01545702813471), (-93.0073084522395, 45.015726499251635), (-93.00729645375364, 45.01599597053852), (-93.00766534382817, 45.01627393026104), (-93.00804623258092, 45.01628241744689), (-93.00842712142982, 45.016290903552864), (-93.008717, 45.016322)])
    actual = get_reachMeasure(Point(-93.008717, 45.016322), flowlines, raindropPath)
    expected = {'gnis_name': 'none', 'comid': 1100118, 'intersectionPoint': (45.016322, -93.008717), 'reachcode': '07010206000564', 'raindropPathDist': 2550.69, 'measure': 71.31}
    assert actual == expected

def test_split_flowline():
    actual = split_flowline(Point(-93.008717, 45.016322), flowlines)
    expected = LineString([(-93.000216, 45.012952), (-93.001794, 45.01268), (-93.002987, 45.012567), (-93.003599, 45.012682), (-93.003986, 45.012865), (-93.004275, 45.01314), (-93.004304, 45.014649), (-93.0044, 45.015129), (-93.00514, 45.015701), (-93.005365, 45.016022), (-93.005332, 45.016388), (-93.005203, 45.01657), (-93.005202, 45.016753), (-93.005363, 45.016799), (-93.007105, 45.016481), (-93.008717, 45.016322)]), LineString([(-93.008717, 45.016322), (-93.009233, 45.016346), (-93.009942, 45.016507), (-93.010779, 45.016896), (-93.011134, 45.016942), (-93.01194, 45.016829), (-93.012714, 45.016578), (-93.013326, 45.016579), (-93.013745, 45.016716), (-93.01426, 45.017082), (-93.014292, 45.017243), (-93.01455, 45.017357), (-93.015807, 45.017427), (-93.016033, 45.017496), (-93.016644, 45.017885), (-93.01716, 45.018091), (-93.018159, 45.01839), (-93.019158, 45.018642), (-93.021253, 45.01853), (-93.021544, 45.018324), (-93.022028, 45.017776), (-93.022287, 45.01757), (-93.022673, 45.017571), (-93.023027, 45.017822), (-93.023221, 45.018051), (-93.023252, 45.01844), (-93.02325, 45.019606), (-93.023056, 45.020086), (-93.023054, 45.020909), (-93.023311, 45.021367), (-93.023665, 45.021733), (-93.02373, 45.021893), (-93.023761, 45.022487), (-93.023857, 45.022625), (-93.024373, 45.02274), (-93.025405, 45.022832), (-93.025823, 45.023038), (-93.025984, 45.023267), (-93.026015, 45.02425), (-93.026079, 45.024365), (-93.026046, 45.024479), (-93.026207, 45.024662), (-93.027624, 45.025692), (-93.02901, 45.026356), (-93.029815, 45.026654), (-93.030266, 45.026723), (-93.030782, 45.026678)])
    assert actual == expected

def test_merge_downstreamPath():
    downstreamFlowline = LineString([(-93.008717, 45.016322), (-93.009233, 45.016346), (-93.009942, 45.016507), (-93.010779, 45.016896), (-93.011134, 45.016942), (-93.01194, 45.016829), (-93.012714, 45.016578), (-93.013326, 45.016579), (-93.013745, 45.016716), (-93.01426, 45.017082), (-93.014292, 45.017243), (-93.01455, 45.017357), (-93.015807, 45.017427), (-93.016033, 45.017496), (-93.016644, 45.017885), (-93.01716, 45.018091), (-93.018159, 45.01839), (-93.019158, 45.018642), (-93.021253, 45.01853), (-93.021544, 45.018324), (-93.022028, 45.017776), (-93.022287, 45.01757), (-93.022673, 45.017571), (-93.023027, 45.017822), (-93.023221, 45.018051), (-93.023252, 45.01844), (-93.02325, 45.019606), (-93.023056, 45.020086), (-93.023054, 45.020909), (-93.023311, 45.021367), (-93.023665, 45.021733), (-93.02373, 45.021893), (-93.023761, 45.022487), (-93.023857, 45.022625), (-93.024373, 45.02274), (-93.025405, 45.022832), (-93.025823, 45.023038), (-93.025984, 45.023267), (-93.026015, 45.02425), (-93.026079, 45.024365), (-93.026046, 45.024479), (-93.026207, 45.024662), (-93.027624, 45.025692), (-93.02901, 45.026356), (-93.029815, 45.026654), (-93.030266, 45.026723), (-93.030782, 45.026678)])
    actual = merge_downstreamPath(raindropPath, downstreamFlowline)
    expected = LineString([(-93.00000748145598, 44.999919001788165), (-93.00038827660947, 44.99992751036108), (-93.00076907185931, 44.99993601785441), (-93.00114986720548, 44.999944524268265), (-93.00153066264802, 44.99995302960253), (-93.00191145818685, 44.99996153385728), (-93.00228023804749, 45.000239497885254), (-93.00266103530326, 45.00024800002032), (-93.0030418326553, 45.00025650107584), (-93.00342263010361, 45.000265001051794), (-93.0038034276482, 45.00027349994815), (-93.004184225289, 45.00028199776498), (-93.00456502302606, 45.000290494502195), (-93.00455301630132, 45.00055995576119), (-93.00454100948035, 45.00082941718957), (-93.00452900256317, 45.00109887878746), (-93.00451699554976, 45.00136834055483), (-93.00450498844013, 45.00163780249167), (-93.00487378821379, 45.00191576049221), (-93.00525459528954, 45.00192425530687), (-93.00563540246148, 45.00193274904191), (-93.00562339973264, 45.002202211435986), (-93.00599220722462, 45.002480166733925), (-93.00598020582784, 45.00274962950647), (-93.00634901779698, 45.00302758418206), (-93.0063370177323, 45.00329704733309), (-93.00670583417869, 45.00357500138634), (-93.00669383544616, 45.00384446491591), (-93.00668183661747, 45.00411392861508), (-93.00666983769264, 45.00438339248376), (-93.00665783867161, 45.004652856522036), (-93.00664583955444, 45.004922320729946), (-93.0066338403411, 45.00519178510745), (-93.00624101375261, 45.00545275864611), (-93.005848184115, 45.00571373119592), (-93.00583618156395, 45.00598319600344), (-93.00544334725635, 45.00624416769459), (-93.00543134298829, 45.00651363280203), (-93.00580017333361, 45.00679159144398), (-93.00616900672823, 45.007069549254716), (-93.00653784317213, 45.00734750623426), (-93.00652584309321, 45.00761697213857), (-93.00651384291812, 45.007886438212566), (-93.00650184264686, 45.0081559044563), (-93.00648984227941, 45.008425370869745), (-93.00647784181577, 45.00869483745284), (-93.00646584125595, 45.008964304205705), (-93.00683468932036, 45.00924226160879), (-93.00682269009292, 45.00951172874047), (-93.0068106907693, 45.00978119604197), (-93.00679869134952, 45.010050663513205), (-93.00678669183354, 45.010320131154245), (-93.0067746922214, 45.01058959896501), (-93.00676269251308, 45.01085906694556), (-93.00675069270858, 45.011128535095885), (-93.00711955382286, 45.01140649313206), (-93.00748841798685, 45.01168445033706), (-93.00747642094352, 45.01195391907567), (-93.00746442380404, 45.0122233879841), (-93.00745242656839, 45.01249285706234), (-93.00782129806828, 45.01277081406387), (-93.008190172618, 45.01304877023426), (-93.00817817814372, 45.01331823990086), (-93.00816618357328, 45.013587709737344), (-93.00815418890673, 45.0138571797437), (-93.00853506403047, 45.01386566549513), (-93.008142194144, 45.014126649919945), (-93.0077493212076, 45.01438763335604), (-93.00735644522122, 45.01464861580347), (-93.00734444712005, 45.014918086410624), (-93.00733244892271, 45.015187557187716), (-93.0073204506292, 45.01545702813471), (-93.0073084522395, 45.015726499251635), (-93.00729645375364, 45.01599597053852), (-93.00766534382817, 45.01627393026104), (-93.00804623258092, 45.01628241744689), (-93.00842712142982, 45.016290903552864), (-93.008717, 45.016322), (-93.008717, 45.016322), (-93.009233, 45.016346), (-93.009942, 45.016507), (-93.010779, 45.016896), (-93.011134, 45.016942), (-93.01194, 45.016829), (-93.012714, 45.016578), (-93.013326, 45.016579), (-93.013745, 45.016716), (-93.01426, 45.017082), (-93.014292, 45.017243), (-93.01455, 45.017357), (-93.015807, 45.017427), (-93.016033, 45.017496), (-93.016644, 45.017885), (-93.01716, 45.018091), (-93.018159, 45.01839), (-93.019158, 45.018642), (-93.021253, 45.01853), (-93.021544, 45.018324), (-93.022028, 45.017776), (-93.022287, 45.01757), (-93.022673, 45.017571), (-93.023027, 45.017822), (-93.023221, 45.018051), (-93.023252, 45.01844), (-93.02325, 45.019606), (-93.023056, 45.020086), (-93.023054, 45.020909), (-93.023311, 45.021367), (-93.023665, 45.021733), (-93.02373, 45.021893), (-93.023761, 45.022487), (-93.023857, 45.022625), (-93.024373, 45.02274), (-93.025405, 45.022832), (-93.025823, 45.023038), (-93.025984, 45.023267), (-93.026015, 45.02425), (-93.026079, 45.024365), (-93.026046, 45.024479), (-93.026207, 45.024662), (-93.027624, 45.025692), (-93.02901, 45.026356), (-93.029815, 45.026654), (-93.030266, 45.026723), (-93.030782, 45.026678)])
    assert actual == expected



